(************** Content-type: application/mathematica **************
                     CreatedBy='Mathematica 5.2'

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[     20891,        532]*)
(*NotebookOutlinePosition[     21573,        556]*)
(*  CellTagsIndexPosition[     21529,        552]*)
(*WindowFrame->Normal*)



Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
    \(\(Needs["\<KnotTheory`\>"];\)\), "\[IndentingNewLine]", 
    \(\(InterlacedQ[{a_, b_}, \ {c_, 
            d_}]\  := \ \((Signature[{a, b}] Signature[{c, d}] 
              Signature[{a, b, c, 
                  d}] === \(-1\))\);\)\), "\[IndentingNewLine]", 
    \(\(Slidable[a_, b_, m_List]\  := \ 
        Module[\[IndentingNewLine]{h}, \[IndentingNewLine]Or[\
\[IndentingNewLine]\(! \((Or\  @@ \ \((\(InterlacedQ[{a, b}, \ #] &\)\  /@ \ 
                      m)\))\)\), \[IndentingNewLine]SameQ[
              0, \[IndentingNewLine]Total[
                  h\  /@ \ Select[\[IndentingNewLine]Sort[
                        Flatten[
                          m]], \[IndentingNewLine]\((Min[a, b] < # < 
                            Max[a, b])\) &\[IndentingNewLine]]]\  /. \ 
                2  h[_]\  \[Rule] \ 
                  0\[IndentingNewLine]]\[IndentingNewLine]]\[IndentingNewLine]\
];\)\), "\[IndentingNewLine]", 
    \(\(Options[
          ArcPresentation]\  = \ {Reduce\  \[Rule] \ 
            Infinity};\)\), "\[IndentingNewLine]", 
    \(\(ArcPresentation[ml_MorseLink, \ opts___Rule]\  := \ 
        Module[\[IndentingNewLine]{\[IndentingNewLine]ActiveVerts, \ 
            VertOrdering, \ vc, out, m, n, k, p, b, c, br, bl, r, \ l, \ 
            UnneededVerts, \ AP, \ redsdone, \ 
            oldreds, \ \[IndentingNewLine]red\  = \ \(Reduce\  /. \ {opts}\)\ \
 /. \ Options[
                  ArcPresentation]\[IndentingNewLine]}, \
\[IndentingNewLine]ActiveVerts = {}; \ VertOrdering = {}; \ 
          vc = 0; \[IndentingNewLine]out\  = \ \(\((List\  @@ \ 
                    ml)\)\  /. \ {\[IndentingNewLine]Cup[m_, 
                      n_]\  \[RuleDelayed] \ \((\[IndentingNewLine]k\  = \ 
                        Min[m, n]; \[IndentingNewLine]ActiveVerts\  = \ 
                        Insert[ActiveVerts, \ \(++vc\), \ 
                          k]; \[IndentingNewLine]ActiveVerts\  = \ 
                        Insert[ActiveVerts, \ \(++vc\), \ 
                          k + 1]; \[IndentingNewLine]If[
                        k \[Equal] 
                          1, \[IndentingNewLine]VertOrdering = {vc - 1, \ vc}~
                            Join~VertOrdering, \[IndentingNewLine]{{p}}\  = \ 
                          Position[VertOrdering, \ 
                            ActiveVerts[\([k - 
                                  1]\)]]; \[IndentingNewLine]VertOrdering\  = \
\ Insert[VertOrdering, \ vc - 1, \ 
                            p + 1]; \[IndentingNewLine]VertOrdering\  = \ 
                          Insert[VertOrdering, \ \ vc, \ 
                            p + 2];\[IndentingNewLine]]; \
\[IndentingNewLine]{m, n} - k + vc - 
                        1\ \[IndentingNewLine])\), \[IndentingNewLine]X[n_, \ 
                      Under, \ b_, \ 
                      c_]\  \[RuleDelayed] \ \ \((\[IndentingNewLine]bl = 
                        ActiveVerts[\([n]\)]; \[IndentingNewLine]ActiveVerts\ \
 = \ Insert[Delete[ActiveVerts, \ \ n], \ \(++vc\), \ 
                          n + 1]; \[IndentingNewLine]{{p}}\  = \ 
                        Position[VertOrdering, \ 
                          ActiveVerts[\([n]\)]]; \
\[IndentingNewLine]VertOrdering\  = \ 
                        Insert[VertOrdering, \ \ vc, \ 
                          p + 1]; \[IndentingNewLine]If[
                        b === Up, \ {bl, \ vc}, \ {vc, 
                          bl}]\[IndentingNewLine])\), \[IndentingNewLine]X[
                      n_, \ Over, \ b_, \ 
                      c_]\  \[RuleDelayed] \ \ \((\[IndentingNewLine]br = 
                        ActiveVerts[\([n + 
                              1]\)]; \[IndentingNewLine]ActiveVerts\  = \ 
                        Insert[Delete[ActiveVerts, \ \ n + 1], \ \(++vc\), \ 
                          n]; \[IndentingNewLine]{{p}}\  = \ 
                        Position[VertOrdering, \ 
                          ActiveVerts[\([n + 
                                1]\)]]; \[IndentingNewLine]VertOrdering\  = \ 
                        Insert[VertOrdering, \ \ vc, \ 
                          p]; \[IndentingNewLine]If[
                        c === Up, \ {br, \ vc}, \ {vc, 
                          br}]\[IndentingNewLine])\), \[IndentingNewLine]Cap[
                      m_, \ n_]\  \[RuleDelayed] \ \((\[IndentingNewLine]r = \
{ActiveVerts[\([m]\)], \ 
                          ActiveVerts[\([n]\)]}; \
\[IndentingNewLine]ActiveVerts\  = \ 
                        Delete[
                          ActiveVerts, \ {{m}, \ {n}}]; \[IndentingNewLine]r\
\[IndentingNewLine])\)\[IndentingNewLine]}\)\  /. \ 
              Thread[Rule[VertOrdering, \ 
                  Range[Length[
                      VertOrdering]]]]; \[IndentingNewLine]redsdone = 0; \ 
          oldreds = \(-1\); \ 
          UnneededVerts = {}; \[IndentingNewLine]While[
            redsdone\  < \ red\  && \ 
              redsdone\  > \ oldreds, \[IndentingNewLine]oldreds = 
              redsdone; \[IndentingNewLine]out\  = \ \((AP\  @@ \ 
                    out)\)\  /. \ {\[IndentingNewLine]AP[
                        l___, \ {a_, \ b_}, \ m___, \ {b_, c_}, \ 
                        r___]\  /; \ \((a \[NotEqual] c\  && \ 
                          Slidable[a, 
                            b, {m}])\)\  \[RuleDelayed] \ \((\
\[IndentingNewLine]\(++redsdone\); \ 
                      AppendTo[UnneededVerts, \ b]; \[IndentingNewLine]AP[
                        l, \ m, \ {a, c}, \ 
                        r]\[IndentingNewLine])\), \[IndentingNewLine]AP[
                        l___, \ {b_, \ a_}, \ m___, \ {c_, b_}, \ 
                        r___]\  /; \ \((a \[NotEqual] c\  && \ 
                          Slidable[a, 
                            b, {m}])\)\  \[RuleDelayed] \ \((\
\[IndentingNewLine]\(++redsdone\); \ 
                      AppendTo[UnneededVerts, \ b]; \[IndentingNewLine]AP[
                        l, \ m, \ {c, \ a}, \ 
                        r]\[IndentingNewLine])\), \[IndentingNewLine]AP[
                        l___, \ {b_, \ c_}, \ m___, \ {a_, b_}, \ 
                        r___]\  /; \ \((a \[NotEqual] c\  && \ 
                          Slidable[a, 
                            b, {m}])\)\  \[RuleDelayed] \ \((\
\[IndentingNewLine]\(++redsdone\); \ 
                      AppendTo[UnneededVerts, \ b]; \[IndentingNewLine]AP[
                        l, \ \ {a, c}, \ m, \ 
                        r]\[IndentingNewLine])\), \[IndentingNewLine]AP[
                        l___, \ {c_, \ b_}, \ m___, \ {b_, a_}, \ 
                        r___]\  /; \ \((a \[NotEqual] c\  && \ 
                          Slidable[a, 
                            b, {m}])\)\  \[RuleDelayed] \ \((\
\[IndentingNewLine]\(++redsdone\); \ 
                      AppendTo[UnneededVerts, \ b]; \[IndentingNewLine]AP[
                        l, \ \ {c, \ a}, \ m, \ 
                        r]\[IndentingNewLine])\)\[IndentingNewLine]}\
\[IndentingNewLine]]; \[IndentingNewLine]out\  = \ 
            out\  /. \ Thread[
                Rule[Delete[Range[vc], \ List\  /@ \ UnneededVerts], \ 
                  Range[vc - 
                      Length[UnneededVerts]]]]; \
\[IndentingNewLine]ArcPresentation\  @@ \ 
            out\[IndentingNewLine]];\)\), "\[IndentingNewLine]", 
    \(\(\(ArcPresentation[K_, \ opts___Rule]\  := \ 
        ArcPresentation[MorseLink[K], \ opts];\)\(\[IndentingNewLine]\)
    \)\), "\[IndentingNewLine]", 
    \(\(Options[
          Draw]\  = \ {OverlayMatrix\  \[Rule] \ 
            Null};\)\), "\[IndentingNewLine]", 
    \(Draw[ap_ArcPresentation, \ opts___Rule]\ \  := \ 
      Module[\[IndentingNewLine]{\[IndentingNewLine]l, p1, p2, k, \ 
          V, \[IndentingNewLine]om\  = \ \(OverlayMatrix\  /. \ {opts}\)\  \
/. \ Options[Draw]\[IndentingNewLine]}, \[IndentingNewLine]l\  = \ 
          Length[ap]; \[IndentingNewLine]Graphics[
          Flatten[{\[IndentingNewLine]{Thickness[\(1/10\)/
                    Length[ap]]}, \
\[IndentingNewLine]Table[\[IndentingNewLine]Line[{{ap[\([k, \ 1]\)], \ 
                      k}, \ {ap[\([k, 2]\)], \ k}}], \[IndentingNewLine]{k, 
                  l}\[IndentingNewLine]], \[IndentingNewLine]{Thickness[
                  0.45/Length[ap]], \ 
                GrayLevel[
                  1]}, \[IndentingNewLine]Table[\[IndentingNewLine]{{p1}}\  = \
\ Position[First\  /@ \ ap, \ k]; \[IndentingNewLine]{{p2}}\  = \ 
                  Position[Last\  /@ \ ap, \ k]; \[IndentingNewLine]{p1, \ 
                    p2}\  = \ 
                  Sort[{p1, p2}]; \[IndentingNewLine]Line[{{k, \ 
                      p1 + 0.5}, \ {k, \ 
                      p2 - 0.5}}], \[IndentingNewLine]{k, \ 
                  l}\[IndentingNewLine]], \[IndentingNewLine]{Thickness[\(1/
                      10\)/Length[ap]], \ 
                GrayLevel[
                  0]}, \[IndentingNewLine]Table[\[IndentingNewLine]{{p1}}\  = \
\ Position[First\  /@ \ ap, \ k]; \[IndentingNewLine]{{p2}}\  = \ 
                  Position[Last\  /@ \ ap, \ 
                    k]; \[IndentingNewLine]Line[{{k, \ p1}, \ {k, \ 
                      p2}}], \[IndentingNewLine]{k, \ 
                  l}\[IndentingNewLine]], \[IndentingNewLine]If[
                om === Null, \ {}, \[IndentingNewLine]MapIndexed[\
\[IndentingNewLine]Text[#1, \ 0.5 + #2] &, \[IndentingNewLine]Transpose[
                    om], \ {2}\[IndentingNewLine]]\[IndentingNewLine]]\
\[IndentingNewLine]}]]\[IndentingNewLine]]\)}], "Input"],

Cell[BoxData[
    \("Loading KnotTheory` version of August 31, 2006, 11:25:27.5625.\nRead \
more at http://katlas.math.toronto.edu/wiki/KnotTheory."\)], "Print"],

Cell[BoxData[
    RowBox[{\(General::"spell1"\), \(\(:\)\(\ \)\), "\<\"Possible spelling \
error: new symbol name \\\"\\!\\(InterlacedQ\\)\\\" is similar to existing \
symbol \\\"\\!\\(Interlaced\\)\\\". \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"General::spell1\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    RowBox[{\(General::"spell1"\), \(\(:\)\(\ \)\), "\<\"Possible spelling \
error: new symbol name \\\"\\!\\(out\\)\\\" is similar to existing symbol \
\\\"\\!\\(Out\\)\\\". \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::spell1\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(General::"spell1"\), \(\(:\)\(\ \)\), "\<\"Possible spelling \
error: new symbol name \\\"\\!\\(red\\)\\\" is similar to existing symbol \
\\\"\\!\\(Red\\)\\\". \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::spell1\\\"]\\)\"\>"}]], "Message"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Draw[ArcPresentation["\<K11n11\>"]]\  // \ Show\)], "Input"],

Cell[BoxData[
    \(KnotTheory::"loading" \(\(:\)\(\ \)\) 
      "Loading precomputed data in \!\(\"DTCode4KnotsTo11`\"\)."\)], "Message"],

Cell[BoxData[
    \(KnotTheory::"credits" \(\(:\)\(\ \)\) 
      "\!\(\"The GaussCode to PD conversion was written by Siddart\"\
\[Ellipsis]\"n at the University of Toronto in the summer of 2005.\"\)"\)], \
"Message"],

Cell[BoxData[
    \(KnotTheory::"credits" \(\(:\)\(\ \)\) 
      "\!\(\"MorseLink was added to KnotTheory` by Siddarth Sankaran at the \
University of Toronto in the summer of 2005.\"\)"\)], "Message"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.0793651 0.0147151 0.0490503 [
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
0 g
.00833 w
[ ] 0 setdash
.97619 .06377 m
.18254 .06377 L
s
.10317 .11282 m
.81746 .11282 L
s
.2619 .16187 m
.7381 .16187 L
s
.42063 .21092 m
.89683 .21092 L
s
.7381 .25997 m
.97619 .25997 L
s
.34127 .30902 m
.65873 .30902 L
s
.18254 .35807 m
.42063 .35807 L
s
.89683 .40712 m
.57937 .40712 L
s
.65873 .45617 m
.5 .45617 L
s
.57937 .50522 m
.34127 .50522 L
s
.81746 .55427 m
.2619 .55427 L
s
.5 .60332 m
.10317 .60332 L
s
1 g
.0375 w
.10317 .13734 m
.10317 .57879 L
s
.18254 .08829 m
.18254 .33354 L
s
.2619 .18639 m
.2619 .52974 L
s
.34127 .33354 m
.34127 .48069 L
s
.42063 .23544 m
.42063 .33354 L
s
.5 .48069 m
.5 .57879 L
s
.57937 .43164 m
.57937 .48069 L
s
.65873 .33354 m
.65873 .43164 L
s
.7381 .18639 m
.7381 .23544 L
s
.81746 .13734 m
.81746 .52974 L
s
.89683 .23544 m
.89683 .38259 L
s
.97619 .08829 m
.97619 .23544 L
s
0 g
.00833 w
.10317 .11282 m
.10317 .60332 L
s
.18254 .35807 m
.18254 .06377 L
s
.2619 .16187 m
.2619 .55427 L
s
.34127 .30902 m
.34127 .50522 L
s
.42063 .21092 m
.42063 .35807 L
s
.5 .60332 m
.5 .45617 L
s
.57937 .50522 m
.57937 .40712 L
s
.65873 .45617 m
.65873 .30902 L
s
.7381 .25997 m
.7381 .16187 L
s
.81746 .55427 m
.81746 .11282 L
s
.89683 .40712 m
.89683 .21092 L
s
.97619 .06377 m
.97619 .25997 L
s
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{288, 177.938},
  ImageMargins->{{43, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCacheValid->False],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  Graphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]],

Cell[BoxData[
    \(Reflect[ap_ArcPresentation]\  := \ 
      ArcPresentation\  @@ \ \((\[IndentingNewLine]\(\((Last\  /@ \ 
                  Sort[Reverse\  /@ \ Position[ap, \ #]])\) &\)\  /@ \ 
            Range[Length[ap]]\[IndentingNewLine])\)\)], "Input"],

Cell[BoxData[{
    \(\(SwapAt[l_List, \ j_Integer]\  := \ 
        Join[\[IndentingNewLine]Take[l, \ j - 1], \ l[\([{j + 1, \ j}]\)], \ 
          Drop[l, \ j + 1]\[IndentingNewLine]];\)\), "\[IndentingNewLine]", 
    \(MerdeLink[ap_ArcPresentation]\  := \ 
      Module[\[IndentingNewLine]{\[IndentingNewLine]ml = {}, \  (*\ 
            holds\ the\ MorseLink\ under\ construction\ \
*) \[IndentingNewLine]strands = {}, \  (*\ 
            the\ ArcPresentation\ numbering\ of\ the\ active\ strands\ \
*) \[IndentingNewLine]dirs\  = \ {}, \  (*\ 
            the\ orientations\ of\ the\ active\ strands\ \
*) \[IndentingNewLine]k, \ cur, \ fr, \ to, \ type, \ frind, \ toind, \ 
          start, \ end, \ 
          j\[IndentingNewLine]}, \[IndentingNewLine]AddXings[start_, \ 
            end_]\  := \ 
          If[end > 
              start, \[IndentingNewLine]Do[\[IndentingNewLine]AppendTo[ml, \ 
                X[j, \ Under, \ dirs[\([j]\)], \ 
                  dirs[\([j + 1]\)]]]; \[IndentingNewLine]strands = 
                SwapAt[strands, \ j]; \[IndentingNewLine]dirs\  = \ 
                SwapAt[dirs, \ j], \[IndentingNewLine]{j, \ start, \ 
                end - 1}\[IndentingNewLine]], \[IndentingNewLine]Do[\
\[IndentingNewLine]AppendTo[ml, \ 
                X[j - 1, \ Over, \ dirs[\([j - 1]\)], \ 
                  dirs[\([j]\)]]]; \[IndentingNewLine]strands = 
                SwapAt[strands, \ j - 1]; \[IndentingNewLine]dirs\  = \ 
                SwapAt[dirs, \ j - 1], \[IndentingNewLine]{j, \ start, \ 
                end + 1, \ \(-1\)}\[IndentingNewLine]]\[IndentingNewLine]]; \
\[IndentingNewLine]Do[\[IndentingNewLine]{\[IndentingNewLine]{fr, \ 
                to}\  = \ \(cur\  = \ 
                ap[\([k]\)]\), \[IndentingNewLine]{frind, \ 
                toind}\  = \ \(\((1 + 
                      Count[strands, \ i_\  /; \ i < #])\) &\)\  /@ \ 
                cur, \[IndentingNewLine]type\  = \ {\(MemberQ[
                      strands, \ #] &\)\  /@ \ cur, \ 
                Sign[to - 
                    fr]}, \[IndentingNewLine]}; \[IndentingNewLine]Switch[
            type, \[IndentingNewLine]{{False, \ 
                False}, \ \(+1\)}, \ \((\[IndentingNewLine]AppendTo[ml, \ 
                Cup[frind, \ frind + 1]]; \[IndentingNewLine]strands\  = \ 
                Flatten[
                  Insert[strands, \ {fr, \ to}, \ 
                    frind]]; \[IndentingNewLine]dirs\  = \ 
                Flatten[
                  Insert[dirs, \ {Down, \ Up}, \ 
                    frind]]; \[IndentingNewLine]AddXings[frind + 1, \ 
                toind + 
                  1]\[IndentingNewLine])\), \[IndentingNewLine]{{False, \ 
                True}, \ \(+1\)}, \ \
\((\[IndentingNewLine]strands[\([toind]\)]\  = \ 
                fr; \[IndentingNewLine]AddXings[toind, \ 
                frind]\[IndentingNewLine])\), \[IndentingNewLine]{{True, \ 
                False}, \ \(+1\)}, \ \
\((\[IndentingNewLine]strands[\([frind]\)] = to; \[IndentingNewLine]AddXings[
                frind, \ 
                toind - 
                  1]\[IndentingNewLine])\), \[IndentingNewLine]{{True, \ 
                True}, \ \(+1\)}, \ \((\[IndentingNewLine]AddXings[frind, \ 
                toind - 1]; \[IndentingNewLine]AppendTo[ml, \ 
                Cap[toind - 1, \ toind]]; \[IndentingNewLine]strands\  = \ 
                Delete[strands, \ {{toind - 
                        1}, \ {toind}}]; \[IndentingNewLine]dirs\  = \ 
                Delete[dirs, \ {{toind - 
                        1}, \ {toind}}]\[IndentingNewLine])\), \
\[IndentingNewLine]{{False, \ 
                False}, \ \(-1\)}, \ \((\[IndentingNewLine]AppendTo[ml, \ 
                Cup[frind + 1, \ frind]]; \[IndentingNewLine]strands\  = \ 
                Flatten[
                  Insert[strands, \ {to, \ fr}, \ 
                    frind]]; \[IndentingNewLine]dirs\  = \ 
                Flatten[
                  Insert[dirs, \ {Up, \ Down}, \ 
                    frind]]; \[IndentingNewLine]AddXings[frind, \ 
                toind]\[IndentingNewLine])\), \[IndentingNewLine]{{False, \ 
                True}, \ \(-1\)}, \ \
\((\[IndentingNewLine]strands[\([toind]\)] = fr; \[IndentingNewLine]AddXings[
                toind, \ 
                frind - 
                  1]\[IndentingNewLine])\), \[IndentingNewLine]{{True, \ 
                False}, \ \(-1\)}, \((\[IndentingNewLine]strands[\([frind]\)] \
= to; \[IndentingNewLine]AddXings[frind, \ 
                toind]\[IndentingNewLine])\), \[IndentingNewLine]{{True, \ 
                True}, \ \(-1\)}, \ \((\[IndentingNewLine]AddXings[frind, \ 
                toind + 1]; \[IndentingNewLine]AppendTo[ml, \ 
                Cap[toind + 1, \ toind]]; \[IndentingNewLine]strands\  = \ 
                Delete[strands, \ {{toind + 
                        1}, \ {toind}}]; \[IndentingNewLine]dirs\  = \ 
                Delete[dirs, \ {{toind + 
                        1}, \ {toind}}]\[IndentingNewLine])\)\
\[IndentingNewLine]];\[IndentingNewLine] (*\ 
            Print[{k, \ cur, \ type, \ strands, \ 
                ml}]\ *) \[IndentingNewLine], \[IndentingNewLine]{k, 
            Length[ap]}\[IndentingNewLine]]; \[IndentingNewLine]MorseLink\  \
@@ \ ml\[IndentingNewLine]]\)}], "Input"]
},
FrontEndVersion->"5.2 for Microsoft Windows",
ScreenRectangle->{{0, 1280}, {0, 702}},
WindowSize->{632, 675},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
ShowSelection->True,
Magnification->1
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{}
*)

(*CellTagsIndex
CellTagsIndex->{}
*)

(*NotebookFileOutline
Notebook[{

Cell[CellGroupData[{
Cell[1776, 53, 9500, 166, 2590, "Input"],
Cell[11279, 221, 161, 2, 44, "Print"],
Cell[11443, 225, 371, 6, 37, "Message"],
Cell[11817, 233, 354, 5, 37, "Message"],
Cell[12174, 240, 354, 5, 37, "Message"]
}, Open  ]],

Cell[CellGroupData[{
Cell[12565, 250, 80, 1, 30, "Input"],
Cell[12648, 253, 138, 2, 22, "Message"],
Cell[12789, 257, 217, 4, 37, "Message"],
Cell[13009, 263, 201, 3, 52, "Message"],
Cell[13213, 268, 1963, 155, 186, 1840, 151, "GraphicsData", "PostScript", \
"Graphics",
  ImageCacheValid->False],
Cell[15179, 425, 130, 3, 29, "Output"]
}, Open  ]],
Cell[15324, 431, 261, 4, 70, "Input"],
Cell[15588, 437, 5299, 93, 1570, "Input"]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

