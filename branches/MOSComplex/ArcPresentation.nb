(************** Content-type: application/mathematica **************
                     CreatedBy='Mathematica 5.2'

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[     28646,        598]*)
(*NotebookOutlinePosition[     29331,        622]*)
(*  CellTagsIndexPosition[     29287,        618]*)
(*WindowFrame->Normal*)



Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
    \(\(Needs["\<KnotTheory`\>"];\)\), "\[IndentingNewLine]", 
    \(\(InterlacedQ[{a_, b_}, \ {c_, 
            d_}]\  := \ \((Signature[{a, b}] Signature[{c, d}] 
              Signature[{a, b, c, 
                  d}] === \(-1\))\);\)\), "\[IndentingNewLine]", 
    \(\(Slidable[a_, b_, m_List]\  := \ 
        Module[\[IndentingNewLine]{h}, \[IndentingNewLine]Or[\
\[IndentingNewLine]\(! \((Or\  @@ \ \((\(InterlacedQ[{a, b}, \ #] &\)\  /@ \ 
                      m)\))\)\), \[IndentingNewLine]SameQ[
              0, \[IndentingNewLine]Total[
                  h\  /@ \ Select[\[IndentingNewLine]Sort[
                        Flatten[
                          m]], \[IndentingNewLine]\((Min[a, b] < # < 
                            Max[a, b])\) &\[IndentingNewLine]]]\  /. \ 
                2  h[_]\  \[Rule] \ 
                  0\[IndentingNewLine]]\[IndentingNewLine]]\[IndentingNewLine]\
];\)\), "\[IndentingNewLine]", 
    \(\(Options[
          ArcPresentation]\  = \ {Reduce\  \[Rule] \ 
            Infinity};\)\), "\[IndentingNewLine]", 
    \(\(ArcPresentation[ml_MorseLink, \ opts___Rule]\  := \ 
        Module[\[IndentingNewLine]{\[IndentingNewLine]ActiveVerts, \ 
            VertOrdering, \ vc, out, m, n, k, p, b, c, br, bl, r, \ l, \ 
            UnneededVerts, \ AP, \ redsdone, \ 
            oldreds, \ \[IndentingNewLine]red\  = \ \(Reduce\  /. \ {opts}\)\ \
 /. \ Options[
                  ArcPresentation]\[IndentingNewLine]}, \
\[IndentingNewLine]ActiveVerts = {}; \ VertOrdering = {}; \ 
          vc = 0; \[IndentingNewLine]out\  = \ \(\((List\  @@ \ 
                    ml)\)\  /. \ {\[IndentingNewLine]Cup[m_, 
                      n_]\  \[RuleDelayed] \ \((\[IndentingNewLine]k\  = \ 
                        Min[m, n]; \[IndentingNewLine]ActiveVerts\  = \ 
                        Insert[ActiveVerts, \ \(++vc\), \ 
                          k]; \[IndentingNewLine]ActiveVerts\  = \ 
                        Insert[ActiveVerts, \ \(++vc\), \ 
                          k + 1]; \[IndentingNewLine]If[
                        k \[Equal] 
                          1, \[IndentingNewLine]VertOrdering = {vc - 1, \ vc}~
                            Join~VertOrdering, \[IndentingNewLine]{{p}}\  = \ 
                          Position[VertOrdering, \ 
                            ActiveVerts[\([k - 
                                  1]\)]]; \[IndentingNewLine]VertOrdering\  = \
\ Insert[VertOrdering, \ vc - 1, \ 
                            p + 1]; \[IndentingNewLine]VertOrdering\  = \ 
                          Insert[VertOrdering, \ \ vc, \ 
                            p + 2];\[IndentingNewLine]]; \
\[IndentingNewLine]{m, n} - k + vc - 
                        1\ \[IndentingNewLine])\), \[IndentingNewLine]X[n_, \ 
                      Under, \ b_, \ 
                      c_]\  \[RuleDelayed] \ \ \((\[IndentingNewLine]bl = 
                        ActiveVerts[\([n]\)]; \[IndentingNewLine]ActiveVerts\ \
 = \ Insert[Delete[ActiveVerts, \ \ n], \ \(++vc\), \ 
                          n + 1]; \[IndentingNewLine]{{p}}\  = \ 
                        Position[VertOrdering, \ 
                          ActiveVerts[\([n]\)]]; \
\[IndentingNewLine]VertOrdering\  = \ 
                        Insert[VertOrdering, \ \ vc, \ 
                          p + 1]; \[IndentingNewLine]If[
                        b === Up, \ {bl, \ vc}, \ {vc, 
                          bl}]\[IndentingNewLine])\), \[IndentingNewLine]X[
                      n_, \ Over, \ b_, \ 
                      c_]\  \[RuleDelayed] \ \ \((\[IndentingNewLine]br = 
                        ActiveVerts[\([n + 
                              1]\)]; \[IndentingNewLine]ActiveVerts\  = \ 
                        Insert[Delete[ActiveVerts, \ \ n + 1], \ \(++vc\), \ 
                          n]; \[IndentingNewLine]{{p}}\  = \ 
                        Position[VertOrdering, \ 
                          ActiveVerts[\([n + 
                                1]\)]]; \[IndentingNewLine]VertOrdering\  = \ 
                        Insert[VertOrdering, \ \ vc, \ 
                          p]; \[IndentingNewLine]If[
                        c === Up, \ {br, \ vc}, \ {vc, 
                          br}]\[IndentingNewLine])\), \[IndentingNewLine]Cap[
                      m_, \ n_]\  \[RuleDelayed] \ \((\[IndentingNewLine]r = \
{ActiveVerts[\([m]\)], \ 
                          ActiveVerts[\([n]\)]}; \
\[IndentingNewLine]ActiveVerts\  = \ 
                        Delete[
                          ActiveVerts, \ {{m}, \ {n}}]; \[IndentingNewLine]r\
\[IndentingNewLine])\)\[IndentingNewLine]}\)\  /. \ 
              Thread[Rule[VertOrdering, \ 
                  Range[Length[
                      VertOrdering]]]]; \[IndentingNewLine]redsdone = 0; \ 
          oldreds = \(-1\); \ 
          UnneededVerts = {}; \[IndentingNewLine]While[
            redsdone\  < \ red\  && \ 
              redsdone\  > \ oldreds, \[IndentingNewLine]oldreds = 
              redsdone; \[IndentingNewLine]out\  = \ \((AP\  @@ \ 
                    out)\)\  /. \ {\[IndentingNewLine]AP[
                        l___, \ {a_, \ b_}, \ m___, \ {b_, c_}, \ 
                        r___]\  /; \ \((a \[NotEqual] c\  && \ 
                          Slidable[a, 
                            b, {m}])\)\  \[RuleDelayed] \ \((\
\[IndentingNewLine]\(++redsdone\); \ 
                      AppendTo[UnneededVerts, \ b]; \[IndentingNewLine]AP[
                        l, \ m, \ {a, c}, \ 
                        r]\[IndentingNewLine])\), \[IndentingNewLine]AP[
                        l___, \ {b_, \ a_}, \ m___, \ {c_, b_}, \ 
                        r___]\  /; \ \((a \[NotEqual] c\  && \ 
                          Slidable[a, 
                            b, {m}])\)\  \[RuleDelayed] \ \((\
\[IndentingNewLine]\(++redsdone\); \ 
                      AppendTo[UnneededVerts, \ b]; \[IndentingNewLine]AP[
                        l, \ m, \ {c, \ a}, \ 
                        r]\[IndentingNewLine])\), \[IndentingNewLine]AP[
                        l___, \ {b_, \ c_}, \ m___, \ {a_, b_}, \ 
                        r___]\  /; \ \((a \[NotEqual] c\  && \ 
                          Slidable[a, 
                            b, {m}])\)\  \[RuleDelayed] \ \((\
\[IndentingNewLine]\(++redsdone\); \ 
                      AppendTo[UnneededVerts, \ b]; \[IndentingNewLine]AP[
                        l, \ \ {a, c}, \ m, \ 
                        r]\[IndentingNewLine])\), \[IndentingNewLine]AP[
                        l___, \ {c_, \ b_}, \ m___, \ {b_, a_}, \ 
                        r___]\  /; \ \((a \[NotEqual] c\  && \ 
                          Slidable[a, 
                            b, {m}])\)\  \[RuleDelayed] \ \((\
\[IndentingNewLine]\(++redsdone\); \ 
                      AppendTo[UnneededVerts, \ b]; \[IndentingNewLine]AP[
                        l, \ \ {c, \ a}, \ m, \ 
                        r]\[IndentingNewLine])\)\[IndentingNewLine]}\
\[IndentingNewLine]]; \[IndentingNewLine]out\  = \ 
            out\  /. \ Thread[
                Rule[Delete[Range[vc], \ List\  /@ \ UnneededVerts], \ 
                  Range[vc - 
                      Length[UnneededVerts]]]]; \
\[IndentingNewLine]ArcPresentation\  @@ \ 
            out\[IndentingNewLine]];\)\), "\[IndentingNewLine]", 
    \(\(ArcPresentation[K_, \ opts___Rule]\  := \ 
        ArcPresentation[MorseLink[K], \ 
          opts];\)\[IndentingNewLine]\), "\[IndentingNewLine]", 
    \(\(Options[
          Draw]\  = \ {OverlayMatrix\  \[Rule] \ 
            Null};\)\), "\[IndentingNewLine]", 
    \(Draw[ap_ArcPresentation, \ opts___Rule]\ \  := \ 
      Module[\[IndentingNewLine]{\[IndentingNewLine]l, p1, p2, k, \ 
          V, \[IndentingNewLine]om\  = \ \(OverlayMatrix\  /. \ {opts}\)\  \
/. \ Options[Draw]\[IndentingNewLine]}, \[IndentingNewLine]l\  = \ 
          Length[ap]; \[IndentingNewLine]Graphics[
          Flatten[{\[IndentingNewLine]{Thickness[\(1/10\)/
                    Length[ap]]}, \
\[IndentingNewLine]Table[\[IndentingNewLine]Line[{{ap[\([k, \ 1]\)], \ 
                      k}, \ {ap[\([k, 2]\)], \ k}}], \[IndentingNewLine]{k, 
                  l}\[IndentingNewLine]], \[IndentingNewLine]{Thickness[
                  0.45/Length[ap]], \ 
                GrayLevel[
                  1]}, \[IndentingNewLine]Table[\[IndentingNewLine]{{p1}}\  = \
\ Position[First\  /@ \ ap, \ k]; \[IndentingNewLine]{{p2}}\  = \ 
                  Position[Last\  /@ \ ap, \ k]; \[IndentingNewLine]{p1, \ 
                    p2}\  = \ 
                  Sort[{p1, p2}]; \[IndentingNewLine]Line[{{k, \ 
                      p1 + 0.5}, \ {k, \ 
                      p2 - 0.5}}], \[IndentingNewLine]{k, \ 
                  l}\[IndentingNewLine]], \[IndentingNewLine]{Thickness[\(1/
                      10\)/Length[ap]], \ 
                GrayLevel[
                  0]}, \[IndentingNewLine]Table[\[IndentingNewLine]{{p1}}\  = \
\ Position[First\  /@ \ ap, \ k]; \[IndentingNewLine]{{p2}}\  = \ 
                  Position[Last\  /@ \ ap, \ 
                    k]; \[IndentingNewLine]Line[{{k, \ p1}, \ {k, \ 
                      p2}}], \[IndentingNewLine]{k, \ 
                  l}\[IndentingNewLine]], \[IndentingNewLine]If[
                om === Null, \ {}, \[IndentingNewLine]MapIndexed[\
\[IndentingNewLine]Text[#1, \ 0.5 + #2] &, \[IndentingNewLine]Transpose[
                    om], \ {2}\[IndentingNewLine]]\[IndentingNewLine]]\
\[IndentingNewLine]}]]\[IndentingNewLine]]\)}], "Input"],

Cell[BoxData[
    \("Loading KnotTheory` version of August 5, 2006, 16:31:24.0313.\nRead \
more at http://katlas.math.toronto.edu/wiki/KnotTheory."\)], "Print"],

Cell[BoxData[
    RowBox[{\(General::"spell1"\), \(\(:\)\(\ \)\), "\<\"Possible spelling \
error: new symbol name \\\"\\!\\(InterlacedQ\\)\\\" is similar to existing \
symbol \\\"\\!\\(Interlaced\\)\\\". \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"General::spell1\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    RowBox[{\(General::"spell1"\), \(\(:\)\(\ \)\), "\<\"Possible spelling \
error: new symbol name \\\"\\!\\(out\\)\\\" is similar to existing symbol \
\\\"\\!\\(Out\\)\\\". \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::spell1\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(General::"spell1"\), \(\(:\)\(\ \)\), "\<\"Possible spelling \
error: new symbol name \\\"\\!\\(red\\)\\\" is similar to existing symbol \
\\\"\\!\\(Red\\)\\\". \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::spell1\\\"]\\)\"\>"}]], "Message"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Draw[ArcPresentation["\<K11n11\>"]]\  // \ Show\)], "Input"],

Cell[BoxData[
    \(KnotTheory::"loading" \(\(:\)\(\ \)\) 
      "Loading precomputed data in \!\(\"DTCode4KnotsTo11`\"\)."\)], "Message"],

Cell[BoxData[
    \(KnotTheory::"credits" \(\(:\)\(\ \)\) 
      "\!\(\"The GaussCode to PD conversion was written by Siddart\"\
\[Ellipsis]\"n at the University of Toronto in the summer of 2005.\"\)"\)], \
"Message"],

Cell[BoxData[
    \(KnotTheory::"credits" \(\(:\)\(\ \)\) 
      "\!\(\"MorseLink was added to KnotTheory` by Siddarth Sankaran at the \
University of Toronto in the summer of 2005.\"\)"\)], "Message"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.0793651 0.0147151 0.0490503 [
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
0 g
.00833 w
[ ] 0 setdash
.97619 .06377 m
.18254 .06377 L
s
.10317 .11282 m
.81746 .11282 L
s
.2619 .16187 m
.7381 .16187 L
s
.42063 .21092 m
.89683 .21092 L
s
.7381 .25997 m
.97619 .25997 L
s
.34127 .30902 m
.65873 .30902 L
s
.18254 .35807 m
.42063 .35807 L
s
.89683 .40712 m
.57937 .40712 L
s
.65873 .45617 m
.5 .45617 L
s
.57937 .50522 m
.34127 .50522 L
s
.81746 .55427 m
.2619 .55427 L
s
.5 .60332 m
.10317 .60332 L
s
1 g
.0375 w
.10317 .13734 m
.10317 .57879 L
s
.18254 .08829 m
.18254 .33354 L
s
.2619 .18639 m
.2619 .52974 L
s
.34127 .33354 m
.34127 .48069 L
s
.42063 .23544 m
.42063 .33354 L
s
.5 .48069 m
.5 .57879 L
s
.57937 .43164 m
.57937 .48069 L
s
.65873 .33354 m
.65873 .43164 L
s
.7381 .18639 m
.7381 .23544 L
s
.81746 .13734 m
.81746 .52974 L
s
.89683 .23544 m
.89683 .38259 L
s
.97619 .08829 m
.97619 .23544 L
s
0 g
.00833 w
.10317 .11282 m
.10317 .60332 L
s
.18254 .35807 m
.18254 .06377 L
s
.2619 .16187 m
.2619 .55427 L
s
.34127 .30902 m
.34127 .50522 L
s
.42063 .21092 m
.42063 .35807 L
s
.5 .60332 m
.5 .45617 L
s
.57937 .50522 m
.57937 .40712 L
s
.65873 .45617 m
.65873 .30902 L
s
.7381 .25997 m
.7381 .16187 L
s
.81746 .55427 m
.81746 .11282 L
s
.89683 .40712 m
.89683 .21092 L
s
.97619 .06377 m
.97619 .25997 L
s
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{288, 177.938},
  ImageMargins->{{43, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40004P0000/B000`400?l00000o`00003oo`3ooolQ
0?ooo`00o`3ooolQ0?ooo`00o`3ooolQ0?ooo`00o`3ooolQ0?ooo`00o`3ooolQ0?ooo`00o`3ooolQ
0?ooo`00o`3ooolQ0?ooo`00o`3ooolQ0?ooo`00o`3ooolQ0?ooo`00o`3ooolQ0?ooo`00o`3ooolQ
0?ooo`00o`3ooolQ0?ooo`00o`3ooolQ0?ooo`00o`3ooolQ0?ooo`00o`3ooolQ0?ooo`00o`3ooolQ
0?ooo`00o`3ooolQ0?ooo`00o`3ooolQ0?ooo`00<`3ooooU000000P0oooo000c0?ooonD00000203o
ool003<0oooo0P00003Q0?ooo`800000203oool003<0oooo0P00003Q0?ooo`800000203oool003<0
oooo0P00003Q0?ooo`800000203oool003<0oooo0P00003Q0?ooo`800000203oool003<0oooo0P00
003Q0?ooo`800000203oool003<0oooo0P00003Q0?ooo`800000203oool003<0oooo0P00003Q0?oo
o`800000203oool003<0oooo0P00003Q0?ooo`800000203oool003<0oooo0P00003Q0?ooo`800000
203oool003<0oooo0P00003Q0?ooo`800000203oool003<0oooo0P00003Q0?ooo`800000203oool0
03<0oooo0P00003Q0?ooo`800000203oool001`0oooo4`0000040?ooo`800000103ooonb000002/0
oooo0P0000080?ooo`00703ooolC000000@0oooo0P0000040?oook800000:`3oool2000000P0oooo
000L0?ooo`8000005@3oool200000;@0oooo0P00000[0?ooo`800000203oool001`0oooo0P00000E
0?ooo`800000]03oool2000002/0oooo0P0000080?ooo`00703oool2000001D0oooo0P00002d0?oo
o`800000:`3oool2000000P0oooo000L0?ooo`8000005@3oool200000;@0oooo0P00000[0?ooo`80
0000203oool001`0oooo0P00000E0?ooo`800000]03oool2000002/0oooo0P0000080?ooo`00703o
ool2000001D0oooo0P00002d0?ooo`800000:`3oool2000000P0oooo000L0?ooo`8000005@3oool2
00000;@0oooo0P00000[0?ooo`800000203oool001`0oooo0P00000E0?ooo`800000]03oool20000
02/0oooo0P0000080?ooo`00703oool2000001D0oooo0P00002d0?ooo`800000:`3oool2000000P0
oooo000L0?ooo`8000005@3oool200000;@0oooo0P00000[0?ooo`800000203oool001`0oooo0P00
000E0?ooo`800000]03oool2000002/0oooo0P0000080?ooo`00703oool2000001D0oooo0P00002d
0?ooo`800000:`3oool2000000P0oooo000L0?ooo`8000005@3oool2000001D0ooooRP00000E0?oo
o`800000:`3oool2000000P0oooo000L0?ooo`8000005@3oool2000001D0ooooRP00000E0?ooo`80
0000:`3oool2000000P0oooo000L0?ooo`8000005@3oool2000001D0oooo0P0000260?ooo`800000
5@3oool2000002/0oooo0P0000080?ooo`00703oool2000001D0oooo0P00000E0?ooo`800000QP3o
ool2000001D0oooo0P00000[0?ooo`800000203oool001`0oooo0P00000E0?ooo`8000005@3oool2
000008H0oooo0P00000E0?ooo`800000:`3oool2000000P0oooo000L0?ooo`8000005@3oool20000
01D0oooo0P0000260?ooo`8000005@3oool2000002/0oooo0P0000080?ooo`00703oool2000001D0
oooo0P00000E0?ooo`800000QP3oool2000001D0oooo0P00000[0?ooo`800000203oool001`0oooo
0P00000E0?ooo`8000005@3oool2000008H0oooo0P00000E0?ooo`800000:`3oool2000000P0oooo
000L0?ooo`8000005@3oool2000001D0oooo0P0000260?ooo`8000005@3oool2000002/0oooo0P00
00080?ooo`00703oool2000001D0oooo0P00000E0?ooo`800000QP3oool2000001D0oooo0P00000[
0?ooo`800000203oool001`0oooo0P00000E0?ooo`8000005@3oool2000008H0oooo0P00000E0?oo
o`800000:`3oool2000000P0oooo000L0?ooo`8000005@3oool2000001D0oooo0P0000260?ooo`80
00005@3oool2000002/0oooo0P0000080?ooo`00703oool2000001D0oooo0P00000E0?ooo`800000
QP3oool2000001D0oooo0P00000[0?ooo`800000203oool001`0oooo0P00000E0?ooo`8000005@3o
ool2000008H0oooo0P00000E0?ooo`800000:`3oool2000000P0oooo000L0?ooo`8000005@3oool2
000001D0oooo0P00000[0?oooeL00000103oool2000000@0oooo3@0000040?ooo`800000103ooolC
000001@0oooo0P0000080?ooo`00703oool2000001D0oooo0P00000E0?ooo`800000:`3ooomG0000
00@0oooo0P0000040?ooo`d00000103oool2000000@0oooo4`00000D0?ooo`800000203oool001`0
oooo0P00000E0?ooo`8000005@3oool2000002/0oooo0P00001I0?ooo`8000005@3oool2000001D0
oooo0P00000D0?ooo`800000203oool001`0oooo0P00000E0?ooo`8000005@3oool2000002/0oooo
0P00001I0?ooo`8000005@3oool2000001D0oooo0P00000D0?ooo`800000203oool001`0oooo0P00
000E0?ooo`8000005@3oool2000002/0oooo0P00001I0?ooo`8000005@3oool2000001D0oooo0P00
000D0?ooo`800000203oool001`0oooo0P00000E0?ooo`8000005@3oool2000002/0oooo0P00001I
0?ooo`8000005@3oool2000001D0oooo0P00000D0?ooo`800000203oool001`0oooo0P00000E0?oo
o`8000005@3oool2000002/0oooo0P00001I0?ooo`8000005@3oool2000001D0oooo0P00000D0?oo
o`800000203oool001`0oooo0P00000E0?ooo`8000005@3oool2000002/0oooo0P00001I0?ooo`80
00005@3oool2000001D0oooo0P00000D0?ooo`800000203oool001`0oooo0P00000E0?ooo`800000
5@3oool2000002/0oooo0P00001I0?ooo`8000005@3oool2000001D0oooo0P00000D0?ooo`800000
203oool001`0oooo0P00000E0?ooo`8000005@3oool2000002/0oooo0P00001I0?ooo`8000005@3o
ool2000001D0oooo0P00000D0?ooo`800000203oool001`0oooo0P00000E0?ooo`8000005@3oool2
000002/0oooo0P00001I0?ooo`8000005@3oool2000001D0oooo0P00000D0?ooo`800000203oool0
01`0oooo0P00000E0?ooo`8000005@3oool2000002/0oooo0P00001I0?ooo`8000005@3oool20000
01D0oooo0P00000D0?ooo`800000203oool001`0oooo0P00000E0?ooo`8000005@3oool2000002/0
oooo0P00001I0?ooo`8000005@3oool2000001D0oooo0P00000D0?ooo`800000203oool001`0oooo
0P00000E0?ooo`8000005@3oool2000002/0oooo0P00001I0?ooo`8000005@3oool2000001D0oooo
0P00000D0?ooo`800000203oool001`0oooo0P00000E0?ooo`8000005@3oool2000002/0oooo0P00
001I0?oooa<00000103oool2000000@0oooo3@0000040?ooo`800000103ooolB000000P0oooo000L
0?ooo`8000005@3oool2000001D0oooo0P00000[0?ooo`800000F@3ooolC000000@0oooo0P000004
0?ooo`d00000103oool2000000@0oooo4P0000080?ooo`00703oool2000001D0oooo0P00000E0?oo
o`800000:`3oool200000700oooo0P00000E0?ooo`8000007P3oool001`0oooo0P00000E0?ooo`80
00005@3oool2000002/0oooo0P00001`0?ooo`8000005@3oool2000001h0oooo000L0?ooo`800000
5@3oool2000001D0oooo0P00000[0?ooo`800000L03oool2000001D0oooo0P00000N0?ooo`00703o
ool2000001D0oooo0P00000E0?ooo`800000:`3oool200000700oooo0P00000E0?ooo`8000007P3o
ool001`0oooo0P00000E0?ooo`8000005@3oool2000002/0oooo0P00001`0?ooo`8000005@3oool2
000001h0oooo000L0?ooo`8000005@3oool2000001D0oooo0P00000[0?ooo`800000L03oool20000
01D0oooo0P00000N0?ooo`00703oool2000001D0oooo0P00000E0?ooo`800000:`3oool200000700
oooo0P00000E0?ooo`8000007P3oool001`0oooo0P00000E0?ooo`8000005@3oool2000002/0oooo
0P00001`0?ooo`8000005@3oool2000001h0oooo000L0?ooo`8000005@3oool2000001D0oooo0P00
000[0?ooo`800000L03oool2000001D0oooo0P00000N0?ooo`00703oool2000001D0oooo0P00000E
0?ooo`800000:`3oool200000700oooo0P00000E0?ooo`8000007P3oool001`0oooo0P00000E0?oo
o`8000005@3oool2000002/0oooo0P00001`0?ooo`8000005@3oool2000001h0oooo000L0?ooo`80
00005@3oool2000001D0oooo0P00000[0?ooo`800000L03oool2000001D0oooo0P00000N0?ooo`00
703oool2000001D0oooo0P00000E0?ooo`8000005@3ooolB000000@0oooo0P0000040?oood000000
;03oool2000001D0oooo0P00000N0?ooo`00703oool2000001D0oooo0P00000E0?ooo`8000005@3o
oolB000000@0oooo0P0000040?oood000000;03oool2000001D0oooo0P00000N0?ooo`00703oool2
000001D0oooo0P00000E0?ooo`8000005@3oool2000001@0oooo0P0000120?ooo`800000;03oool2
000001D0oooo0P00000N0?ooo`00703oool2000001D0oooo0P00000E0?ooo`8000005@3oool20000
01@0oooo0P0000120?ooo`800000;03oool2000001D0oooo0P00000N0?ooo`00703oool2000001D0
oooo0P00000E0?ooo`8000005@3oool2000001@0oooo0P0000120?ooo`800000;03oool2000001D0
oooo0P00000N0?ooo`00703oool2000001D0oooo0P00000E0?ooo`8000005@3oool2000001@0oooo
0P0000120?ooo`800000;03oool2000001D0oooo0P00000N0?ooo`00703oool2000001D0oooo0P00
000E0?ooo`8000005@3oool2000001@0oooo0P0000120?ooo`800000;03oool2000001D0oooo0P00
000N0?ooo`00703oool2000001D0oooo0P00000E0?ooo`8000005@3oool2000001@0oooo0P000012
0?ooo`800000;03oool2000001D0oooo0P00000N0?ooo`00703oool2000001D0oooo0P00000E0?oo
o`8000005@3oool2000001@0oooo0P0000120?ooo`800000;03oool2000001D0oooo0P00000N0?oo
o`00703oool2000001D0oooo0P00000E0?ooo`8000005@3oool2000001@0oooo0P0000120?ooo`80
0000;03oool2000001D0oooo0P00000N0?ooo`00703oool2000001D0oooo0P00000E0?ooo`800000
5@3oool2000001@0oooo0P0000120?ooo`800000;03oool2000001D0oooo0P00000N0?ooo`00703o
ool2000001D0oooo0P00000E0?ooo`8000005@3oool2000001@0oooo0P0000120?ooo`800000;03o
ool2000001D0oooo0P00000N0?ooo`00703oool2000001D0oooo0P00000E0?ooo`8000005@3oool2
000001@0oooo0P0000120?ooo`800000;03oool2000001D0oooo0P00000N0?ooo`00703oool20000
01D0oooo0P00000E0?ooo`8000005@3oool2000001@0oooo0P0000120?ooo`800000;03oool20000
01D0oooo0P00000N0?ooo`00703oool2000001D0oooo4`0000040?ooo`800000103oool=000000@0
oooo0P0000040?oooa800000@P3oool2000002`0oooo0P00000E0?ooo`8000007P3oool001`0oooo
0P00000E0?oooa<00000103oool2000000@0oooo3@0000040?ooo`800000103ooolB00000480oooo
0P00000/0?ooo`8000005@3oool2000001h0oooo000L0?ooo`800000;03oool2000001D0oooo0P00
001H0?ooo`800000;03oool2000001D0oooo0P00000N0?ooo`00703oool2000002`0oooo0P00000E
0?ooo`800000F03oool2000002`0oooo0P00000E0?ooo`8000007P3oool001`0oooo0P00000/0?oo
o`8000005@3oool2000005P0oooo0P00000/0?ooo`8000005@3oool2000001h0oooo000L0?ooo`80
0000;03oool2000001D0oooo0P00001H0?ooo`800000;03oool2000001D0oooo0P00000N0?ooo`00
703oool2000002`0oooo0P00000E0?ooo`800000F03oool2000002`0oooo0P00000E0?ooo`800000
7P3oool001`0oooo0P00000/0?ooo`8000005@3oool2000005P0oooo0P00000/0?ooo`8000005@3o
ool2000001h0oooo000L0?ooo`800000;03oool2000001D0oooo0P00001H0?ooo`800000;03oool2
000001D0oooo0P00000N0?ooo`00703oool2000002`0oooo0P00000E0?ooo`800000F03oool20000
02`0oooo0P00000E0?ooo`8000007P3oool001`0oooo0P00000/0?ooo`8000005@3oool2000005P0
oooo0P00000/0?ooo`8000005@3oool2000001h0oooo000L0?ooo`800000;03oool2000001D0oooo
0P00001H0?ooo`800000;03oool2000001D0oooo0P00000N0?ooo`00703oool2000002`0oooo0P00
000E0?ooo`800000F03oool2000002`0oooo0P00000E0?ooo`8000007P3oool001`0oooo0P00000/
0?ooo`8000005@3oool2000005P0oooo0P00000/0?ooo`8000005@3oool2000001h0oooo000L0?oo
o`800000;03oool2000001D0oooo0P0000120?oooa800000103oool2000000@0oooo900000040?oo
o`800000103ooolC000001h0oooo000L0?ooo`800000;03oool2000001D0oooo0P0000120?oooa80
0000103oool2000000@0oooo900000040?ooo`800000103ooolC000001h0oooo000L0?ooo`800000
;03oool2000001D0oooo0P0000120?ooo`800000503oool2000002`0oooo0P00000e0?ooo`00703o
ool2000002`0oooo0P00000E0?ooo`800000@P3oool2000001@0oooo0P00000/0?ooo`800000=@3o
ool001`0oooo0P00000/0?ooo`8000005@3oool200000480oooo0P00000D0?ooo`800000;03oool2
000003D0oooo000L0?ooo`800000;03oool2000001D0oooo0P0000120?ooo`800000503oool20000
02`0oooo0P00000e0?ooo`00703oool2000002`0oooo0P00000E0?ooo`800000@P3oool2000001@0
oooo0P00000/0?ooo`800000=@3oool001`0oooo0P00000/0?ooo`8000005@3oool200000480oooo
0P00000D0?ooo`800000;03oool2000003D0oooo000L0?ooo`800000;03oool2000001D0oooo0P00
00120?ooo`800000503oool2000002`0oooo0P00000e0?ooo`00703oool2000002`0oooo0P00000E
0?ooo`800000@P3oool2000001@0oooo0P00000/0?ooo`800000=@3oool001`0oooo0P00000/0?oo
o`8000005@3oool200000480oooo0P00000D0?ooo`800000;03oool2000003D0oooo000L0?ooo`80
0000;03oool2000001D0oooo0P0000120?ooo`800000503oool2000002`0oooo0P00000e0?ooo`00
703oool2000002`0oooo0P00000E0?ooo`800000@P3oool2000001@0oooo0P00000/0?ooo`800000
=@3oool001`0oooo0P00000/0?ooo`8000005@3oool200000480oooo0P00000D0?ooo`800000;03o
ool2000003D0oooo000L0?ooo`800000;03oool2000001D0oooo0P00000[0?oooa<00000103oool2
000000@0oooo4P00000/0?ooo`800000=@3oool001`0oooo0P00000/0?ooo`8000005@3oool20000
02/0oooo4`0000040?ooo`800000103ooolB000002`0oooo0P00000e0?ooo`00703oool2000002`0
oooo0P00000E0?ooo`800000:`3oool2000001D0oooo0P0000120?ooo`800000=@3oool001`0oooo
0P00000/0?ooo`8000005@3oool2000002/0oooo0P00000E0?ooo`800000@P3oool2000003D0oooo
000L0?ooo`800000;03oool2000001D0oooo0P00000[0?ooo`8000005@3oool200000480oooo0P00
000e0?ooo`00703oool2000002`0oooo0P00000E0?ooo`800000:`3oool2000001D0oooo0P000012
0?ooo`800000=@3oool001`0oooo0P00000/0?ooo`8000005@3oool2000002/0oooo0P00000E0?oo
o`800000@P3oool2000003D0oooo000L0?ooo`800000;03oool2000001D0oooo0P00000[0?ooo`80
00005@3oool200000480oooo0P00000e0?ooo`00703oool2000002`0oooo0P00000E0?ooo`800000
:`3oool2000001D0oooo0P0000120?ooo`800000=@3oool001`0oooo0P00000/0?ooo`8000005@3o
ool2000002/0oooo0P00000E0?ooo`800000@P3oool2000003D0oooo000L0?ooo`800000;03oool2
000001D0oooo0P00000[0?ooo`8000005@3oool200000480oooo0P00000e0?ooo`00703oool20000
02`0oooo0P00000E0?ooo`800000:`3oool2000001D0oooo0P0000120?ooo`800000=@3oool001`0
oooo0P00000/0?ooo`8000005@3oool2000002/0oooo0P00000E0?ooo`800000@P3oool2000003D0
oooo000L0?ooo`800000;03oool2000001D0oooo0P00000[0?ooo`8000005@3oool200000480oooo
0P00000e0?ooo`00703oool2000002`0oooo0P00000E0?ooobT00000103oool2000000@0oooo4`00
00120?ooo`800000=@3oool001`0oooo0P00000/0?ooo`8000005@3ooolY000000@0oooo0P000004
0?oooa<00000@P3oool2000003D0oooo000L0?ooo`800000;03oool200000480oooo0P00001I0?oo
o`800000=@3oool001`0oooo0P00000/0?ooo`800000@P3oool2000005T0oooo0P00000e0?ooo`00
703oool2000002`0oooo0P0000120?ooo`800000F@3oool2000003D0oooo000L0?ooo`800000;03o
ool200000480oooo0P00001I0?ooo`800000=@3oool001`0oooo0P00000/0?ooo`800000@P3oool2
000005T0oooo0P00000e0?ooo`00703oool2000002`0oooo0P0000120?ooo`800000F@3oool20000
03D0oooo000L0?ooo`800000;03oool200000480oooo0P00001I0?ooo`800000=@3oool001`0oooo
0P00000/0?ooo`800000@P3oool2000005T0oooo0P00000e0?ooo`00703oool2000002`0oooo0P00
00120?ooo`800000F@3oool2000003D0oooo000L0?ooo`800000;03oool200000480oooo0P00001I
0?ooo`800000=@3oool001`0oooo0P00000/0?ooo`800000@P3oool2000005T0oooo0P00000e0?oo
o`00703oool2000002`0oooo0P0000120?ooo`800000F@3oool2000003D0oooo000L0?ooo`800000
;03ooom0000000@0oooo0P0000040?oooeL00000=@3oool001`0oooo0P00000/0?oood000000103o
ool2000000@0ooooE`00000e0?ooo`00703oool200000700oooo0P00002@0?ooo`00703oool20000
0700oooo0P00002@0?ooo`00703oool200000700oooo0P00002@0?ooo`00703oool200000700oooo
0P00002@0?ooo`00703oool200000700oooo0P00002@0?ooo`00703oool200000700oooo0P00002@
0?ooo`00703oool200000700oooo0P00002@0?ooo`00703oool200000700oooo0P00002@0?ooo`00
703oool200000700oooo0P00002@0?ooo`00703oool200000700oooo0P00002@0?ooo`00703oool2
00000700oooo0P00002@0?ooo`00703oool200000700oooo0P00002@0?ooo`00703ooomd00000900
oooo000L0?ooog@00000T03oool00?l0oooo8@3oool00?l0oooo8@3oool00?l0oooo8@3oool00001
\
\>"],
  ImageRangeCache->{{{0, 287}, {176.938, 0}} -> {-0.315626, -0.300063, \
0.0440113, 0.0712119}}],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  Graphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]]
},
FrontEndVersion->"5.2 for Microsoft Windows",
ScreenRectangle->{{0, 1280}, {0, 702}},
WindowSize->{632, 675},
WindowMargins->{{103, Automatic}, {Automatic, -2}},
ShowSelection->True,
Magnification->1
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{}
*)

(*CellTagsIndex
CellTagsIndex->{}
*)

(*NotebookFileOutline
Notebook[{

Cell[CellGroupData[{
Cell[1776, 53, 9498, 166, 2590, "Input"],
Cell[11277, 221, 160, 2, 44, "Print"],
Cell[11440, 225, 371, 6, 37, "Message"],
Cell[11814, 233, 354, 5, 37, "Message"],
Cell[12171, 240, 354, 5, 37, "Message"]
}, Open  ]],

Cell[CellGroupData[{
Cell[12562, 250, 80, 1, 30, "Input"],
Cell[12645, 253, 138, 2, 22, "Message"],
Cell[12786, 257, 217, 4, 37, "Message"],
Cell[13006, 263, 201, 3, 52, "Message"],
Cell[13210, 268, 15287, 322, 186, 1840, 151, "GraphicsData", "PostScript", \
"Graphics"],
Cell[28500, 592, 130, 3, 29, "Output"]
}, Open  ]]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

