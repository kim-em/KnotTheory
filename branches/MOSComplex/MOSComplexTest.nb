(************** Content-type: application/mathematica **************
                     CreatedBy='Mathematica 5.2'

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[     84633,       1944]*)
(*NotebookOutlinePosition[     86196,       1991]*)
(*  CellTagsIndexPosition[     85935,       1981]*)
(*WindowFrame->Normal*)



Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
    \(PlanarGridDiagram[Knot[3, 1]]\)], "Input"],

Cell[BoxData[
    \(KnotTheory::"loading" \(\(:\)\(\ \)\) 
      "Loading precomputed data in \!\(\"PD4Knots`\"\)."\)], "Message"],

Cell[BoxData[
    \(KnotTheory::"credits" \(\(:\)\(\ \)\) 
      "\!\(\"MorseLink was added to KnotTheory` by Siddarth Sankaran at the \
University of Toronto in the summer of 2005.\"\)"\)], "Message"],

Cell[BoxData[
    \(PlanarGridDiagram[{5, 2}, {1, 3}, {2, 4}, {3, 5}, {4, 1}]\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Show[Draw[PlanarGridDiagram[Knot[3, \ 1]]]]\)], "Input"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
-0.214286 0.238095 -0.132436 0.147151 [
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
0 g
.02 w
[ ] 0 setdash
.97619 .01472 m
.2619 .01472 L
s
.02381 .16187 m
.5 .16187 L
s
.2619 .30902 m
.7381 .30902 L
s
.5 .45617 m
.97619 .45617 L
s
.7381 .60332 m
.02381 .60332 L
s
1 g
.09 w
.02381 .23544 m
.02381 .52974 L
s
.2619 .08829 m
.2619 .23544 L
s
.5 .23544 m
.5 .38259 L
s
.7381 .38259 m
.7381 .52974 L
s
.97619 .08829 m
.97619 .38259 L
s
0 g
.02 w
.02381 .16187 m
.02381 .60332 L
s
.2619 .30902 m
.2619 .01472 L
s
.5 .45617 m
.5 .16187 L
s
.7381 .60332 m
.7381 .30902 L
s
.97619 .01472 m
.97619 .45617 L
s
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{288, 177.938},
  ImageMargins->{{43, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40004P0000/B000`400?l00000o`00003oo`3ooolQ
0?ooo`00o`3ooolQ0?ooo`00B@3ooooA000000H0oooo00190?ooom4000001P3oool004T0ooood@00
00060?ooo`00B@3ooooA000000H0oooo00190?ooom4000001P3oool004T0oooo1@0000370?ooo`D0
00001P3oool004T0oooo1@0000370?ooo`D000001P3oool004T0oooo1@0000370?ooo`D000001P3o
ool004T0oooo1@0000370?ooo`D000001P3oool004T0oooo1@0000370?ooo`D000001P3oool004T0
oooo1@0000370?ooo`D000001P3oool004T0oooo1@0000370?ooo`D000001P3oool004T0oooo1@00
00370?ooo`D000001P3oool004T0oooo1@0000370?ooo`D000001P3oool004T0oooo1@0000370?oo
o`D000001P3oool004T0oooo1@0000370?ooo`D000001P3oool004T0oooo1@0000370?ooo`D00000
1P3oool004T0oooo1@0000370?ooo`D000001P3oool004T0oooo1@0000370?ooo`D000001P3oool0
04T0oooo1@0000370?ooo`D000001P3oool004T0oooo1@0000370?ooo`D000001P3oool004T0oooo
1@0000370?ooo`D000001P3oool004T0oooo1@0000370?ooo`D000001P3oool004T0oooo1@000037
0?ooo`D000001P3oool004T0oooo1@0000370?ooo`D000001P3oool004T0oooo1@0000370?ooo`D0
00001P3oool004T0oooo1@0000370?ooo`D000001P3oool004T0oooo1@0000370?ooo`D000001P3o
ool004T0oooo1@0000370?ooo`D000001P3oool004T0oooo1@0000370?ooo`D000001P3oool004T0
oooo1@0000370?ooo`D000001P3oool004T0oooo1@0000370?ooo`D000001P3oool004T0oooo1@00
00370?ooo`D000001P3oool004T0oooo1@0000370?ooo`D000001P3oool004T0oooo1@0000370?oo
o`D000001P3oool004T0oooo1@0000370?ooo`D000001P3oool004T0oooo1@0000370?ooo`D00000
1P3oool004T0oooo1@0000370?ooo`D000001P3oool004T0oooo1@0000370?ooo`D000001P3oool0
04T0oooo1@0000370?ooo`D000001P3oool004T0oooo1@0000370?ooo`D000001P3oool004T0oooo
1@0000370?ooo`D000001P3oool000D0oooo>P00000:0?ooo`D000002P3ooolj000008<0oooo1@00
00060?ooo`001@3ooolj000000X0oooo1@00000:0?ooocX00000P`3oool5000000H0oooo00050?oo
ocX000002P3oool5000000X0oooo>P0000230?ooo`D000001P3oool000D0oooo>P00000:0?ooo`D0
00002P3ooolj000008<0oooo1@0000060?ooo`001@3ooolj000000X0oooo1@00000:0?ooocX00000
P`3oool5000000H0oooo00050?ooo`D00000?`3oool5000003l0oooo1@0000230?ooo`D000001P3o
ool000D0oooo1@00000o0?ooo`D00000?`3oool5000008<0oooo1@0000060?ooo`001@3oool50000
03l0oooo1@00000o0?ooo`D00000P`3oool5000000H0oooo00050?ooo`D00000?`3oool5000003l0
oooo1@0000230?ooo`D000001P3oool000D0oooo1@00000o0?ooo`D00000?`3oool5000008<0oooo
1@0000060?ooo`001@3oool5000003l0oooo1@00000o0?ooo`D00000P`3oool5000000H0oooo0005
0?ooo`D00000?`3oool5000003l0oooo1@0000230?ooo`D000001P3oool000D0oooo1@00000o0?oo
o`D00000?`3oool5000008<0oooo1@0000060?ooo`001@3oool5000003l0oooo1@00000o0?ooo`D0
0000P`3oool5000000H0oooo00050?ooo`D00000?`3oool5000003l0oooo1@0000230?ooo`D00000
1P3oool000D0oooo1@00000o0?ooo`D00000?`3oool5000008<0oooo1@0000060?ooo`001@3oool5
000003l0oooo1@00000o0?ooo`D00000P`3oool5000000H0oooo00050?ooo`D00000?`3oool50000
03l0oooo1@0000230?ooo`D000001P3oool000D0oooo1@00000o0?ooo`D00000?`3oool5000008<0
oooo1@0000060?ooo`001@3oool5000003l0oooo1@00000o0?ooo`D00000P`3oool5000000H0oooo
00050?ooo`D00000?`3oool5000003l0oooo1@0000230?ooo`D000001P3oool000D0oooo1@00000o
0?ooo`D00000?`3oool5000008<0oooo1@0000060?ooo`001@3oool5000003l0oooo1@00000o0?oo
o`D00000P`3oool5000000H0oooo00050?ooo`D00000?`3oool5000003l0oooo1@0000230?ooo`D0
00001P3oool000D0oooo1@00000o0?ooo`D00000?`3oool5000008<0oooo1@0000060?ooo`001@3o
ool5000003l0oooo1@00000o0?ooo`D00000P`3oool5000000H0oooo00050?ooo`D00000?`3oool5
000003l0oooo1@0000230?ooo`D000001P3oool000D0oooo1@00000o0?ooo`D00000?`3oool50000
08<0oooo1@0000060?ooo`001@3oool5000003l0oooo1@00000o0?ooo`D00000P`3oool5000000H0
oooo00050?ooo`D00000?`3oool5000003l0oooo1@0000230?ooo`D000001P3oool000D0oooo1@00
000o0?ooo`D00000?`3oool5000008<0oooo1@0000060?ooo`001@3oool5000003l0oooo1@00000o
0?ooo`D00000P`3oool5000000H0oooo00050?ooo`D00000?`3oool5000003l0oooo1@0000230?oo
o`D000001P3oool000D0oooo1@00000o0?ooo`D00000?`3oool5000008<0oooo1@0000060?ooo`00
1@3oool5000003l0oooo1@00000o0?ooo`D00000P`3oool5000000H0oooo00050?ooo`D00000?`3o
ool5000003l0oooo1@0000230?ooo`D000001P3oool000D0oooo1@00000o0?ooo`D00000?`3oool5
000008<0oooo1@0000060?ooo`001@3oool5000003l0oooo1@00000o0?ooo`D00000P`3oool50000
00H0oooo00050?ooo`D00000?`3oool5000003l0oooo1@0000230?ooo`D000001P3oool000D0oooo
1@00000o0?ooo`D00000?`3oool5000008<0oooo1@0000060?ooo`001@3oool5000003l0oooo1@00
000o0?ooo`D00000P`3oool5000000H0oooo00050?ooo`D00000?`3oool5000003l0oooo1@000023
0?ooo`D000001P3oool000D0oooo1@00000o0?ooocX000002P3oool5000000X0oooo>P00000o0?oo
o`D000001P3oool000D0oooo1@00000o0?ooocX000002P3oool5000000X0oooo>P00000o0?ooo`D0
00001P3oool000D0oooo1@00000o0?ooocX000002P3oool5000000X0oooo>P00000o0?ooo`D00000
1P3oool000D0oooo1@00000o0?ooocX000002P3oool5000000X0oooo>P00000o0?ooo`D000001P3o
ool000D0oooo1@00000o0?ooocX000002P3oool5000000X0oooo>P00000o0?ooo`D000001P3oool0
00D0oooo1@0000230?ooo`D00000?`3oool5000003l0oooo1@0000060?ooo`001@3oool5000008<0
oooo1@00000o0?ooo`D00000?`3oool5000000H0oooo00050?ooo`D00000P`3oool5000003l0oooo
1@00000o0?ooo`D000001P3oool000D0oooo1@0000230?ooo`D00000?`3oool5000003l0oooo1@00
00060?ooo`001@3oool5000008<0oooo1@00000o0?ooo`D00000?`3oool5000000H0oooo00050?oo
o`D00000P`3oool5000003l0oooo1@00000o0?ooo`D000001P3oool000D0oooo1@0000230?ooo`D0
0000?`3oool5000003l0oooo1@0000060?ooo`001@3oool5000008<0oooo1@00000o0?ooo`D00000
?`3oool5000000H0oooo00050?ooo`D00000P`3oool5000003l0oooo1@00000o0?ooo`D000001P3o
ool000D0oooo1@0000230?ooo`D00000?`3oool5000003l0oooo1@0000060?ooo`001@3oool50000
08<0oooo1@00000o0?ooo`D00000?`3oool5000000H0oooo00050?ooo`D00000P`3oool5000003l0
oooo1@00000o0?ooo`D000001P3oool000D0oooo1@0000230?ooo`D00000?`3oool5000003l0oooo
1@0000060?ooo`001@3oool5000008<0oooo1@00000o0?ooo`D00000?`3oool5000000H0oooo0005
0?ooo`D00000P`3oool5000003l0oooo1@00000o0?ooo`D000001P3oool000D0oooo1@0000230?oo
o`D00000?`3oool5000003l0oooo1@0000060?ooo`001@3oool5000008<0oooo1@00000o0?ooo`D0
0000?`3oool5000000H0oooo00050?ooo`D00000P`3oool5000003l0oooo1@00000o0?ooo`D00000
1P3oool000D0oooo1@0000230?ooo`D00000?`3oool5000003l0oooo1@0000060?ooo`001@3oool5
000008<0oooo1@00000o0?ooo`D00000?`3oool5000000H0oooo00050?ooo`D00000P`3oool50000
03l0oooo1@00000o0?ooo`D000001P3oool000D0oooo1@0000230?ooo`D00000?`3oool5000003l0
oooo1@0000060?ooo`001@3oool5000008<0oooo1@00000o0?ooo`D00000?`3oool5000000H0oooo
00050?ooo`D00000P`3oool5000003l0oooo1@00000o0?ooo`D000001P3oool000D0oooo1@000023
0?ooo`D00000?`3oool5000003l0oooo1@0000060?ooo`001@3oool5000008<0oooo1@00000o0?oo
o`D00000?`3oool5000000H0oooo00050?ooo`D00000P`3oool5000003l0oooo1@00000o0?ooo`D0
00001P3oool000D0oooo1@0000230?ooo`D00000?`3oool5000003l0oooo1@0000060?ooo`001@3o
ool5000008<0oooo1@00000o0?ooo`D00000?`3oool5000000H0oooo00050?ooo`D00000P`3oool5
000003l0oooo1@00000o0?ooo`D000001P3oool000D0oooo1@0000230?ooo`D00000?`3oool50000
03l0oooo1@0000060?ooo`001@3oool5000008<0oooo1@00000o0?ooo`D00000?`3oool5000000H0
oooo00050?ooo`D00000P`3oool5000003l0oooo1@00000o0?ooo`D000001P3oool000D0oooo1@00
00230?ooo`D00000?`3oool5000003l0oooo1@0000060?ooo`001@3oool5000008<0oooo1@00000o
0?ooo`D00000?`3oool5000000H0oooo00050?ooo`D00000P`3oool5000003l0oooo1@00000o0?oo
o`D000001P3oool000D0oooo1@0000230?ooo`D00000?`3oool5000003l0oooo1@0000060?ooo`00
1@3oool5000008<0oooo>P00000:0?ooo`D000002P3ooolj000000H0oooo00050?ooo`D00000P`3o
oolj000000X0oooo1@00000:0?ooocX000001P3oool000D0oooo1@0000230?ooocX000002P3oool5
000000X0oooo>P0000060?ooo`001@3oool5000008<0oooo>P00000:0?ooo`D000002P3ooolj0000
00H0oooo00050?ooo`D00000P`3ooolj000000X0oooo1@00000:0?ooocX000001P3oool000D0oooo
1@0000370?ooo`D00000BP3oool000D0oooo1@0000370?ooo`D00000BP3oool000D0oooo1@000037
0?ooo`D00000BP3oool000D0oooo1@0000370?ooo`D00000BP3oool000D0oooo1@0000370?ooo`D0
0000BP3oool000D0oooo1@0000370?ooo`D00000BP3oool000D0oooo1@0000370?ooo`D00000BP3o
ool000D0oooo1@0000370?ooo`D00000BP3oool000D0oooo1@0000370?ooo`D00000BP3oool000D0
oooo1@0000370?ooo`D00000BP3oool000D0oooo1@0000370?ooo`D00000BP3oool000D0oooo1@00
00370?ooo`D00000BP3oool000D0oooo1@0000370?ooo`D00000BP3oool000D0oooo1@0000370?oo
o`D00000BP3oool000D0oooo1@0000370?ooo`D00000BP3oool000D0oooo1@0000370?ooo`D00000
BP3oool000D0oooo1@0000370?ooo`D00000BP3oool000D0oooo1@0000370?ooo`D00000BP3oool0
00D0oooo1@0000370?ooo`D00000BP3oool000D0oooo1@0000370?ooo`D00000BP3oool000D0oooo
1@0000370?ooo`D00000BP3oool000D0oooo1@0000370?ooo`D00000BP3oool000D0oooo1@000037
0?ooo`D00000BP3oool000D0oooo1@0000370?ooo`D00000BP3oool000D0oooo1@0000370?ooo`D0
0000BP3oool000D0oooo1@0000370?ooo`D00000BP3oool000D0oooo1@0000370?ooo`D00000BP3o
ool000D0oooo1@0000370?ooo`D00000BP3oool000D0oooo1@0000370?ooo`D00000BP3oool000D0
oooo1@0000370?ooo`D00000BP3oool000D0oooo1@0000370?ooo`D00000BP3oool000D0oooo1@00
00370?ooo`D00000BP3oool000D0oooo1@0000370?ooo`D00000BP3oool000D0oooo1@0000370?oo
o`D00000BP3oool000D0oooo1@0000370?ooo`D00000BP3oool000D0oooo1@0000370?ooo`D00000
BP3oool000D0oooo1@0000370?ooo`D00000BP3oool000D0ooood@00001:0?ooo`001@3ooooA0000
04X0oooo00050?ooom400000BP3oool000D0ooood@00001:0?ooo`001@3ooooA000004X0oooo003o
0?ooob40oooo003o0?ooob40oooo0000\
\>"],
  ImageRangeCache->{{{0, 287}, {176.938, 0}} -> {0.894793, 0.89998, \
0.0146705, 0.0237373}}],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  Graphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Show[
      GraphicsArray[{\[IndentingNewLine]Draw[
            PlanarGridDiagram[Knot["\<K11n34\>"]]], \[IndentingNewLine]Draw[
            PlanarGridDiagram[
              Knot["\<K11n42\>"]]]\[IndentingNewLine]}]]\)], "Input"],

Cell[BoxData[
    \(KnotTheory::"loading" \(\(:\)\(\ \)\) 
      "Loading precomputed data in \!\(\"DTCode4KnotsTo11`\"\)."\)], "Message"],

Cell[BoxData[
    \(KnotTheory::"credits" \(\(:\)\(\ \)\) 
      "\!\(\"The GaussCode to PD conversion was written by Siddarth Sankaran \
at the University of Toronto in the summer of 2005.\"\)"\)], "Message"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .2943 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.47619 0.00700719 0.47619 [
[ 0 0 0 0 ]
[ 1 .2943 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 .2943 L
0 .2943 L
closepath
clip
newpath
% Start of sub-graphic
p
0.0238095 0.00700719 0.477324 0.287295 MathSubStart
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.0732601 0.0147151 0.0452772 [
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
0 g
.00769 w
[ ] 0 setdash
.39011 .05999 m
.97619 .05999 L
s
.17033 .10527 m
.68315 .10527 L
s
.09707 .15055 m
.24359 .15055 L
s
.97619 .19582 m
.17033 .19582 L
s
.60989 .2411 m
.75641 .2411 L
s
.68315 .28638 m
.09707 .28638 L
s
.31685 .33166 m
.53663 .33166 L
s
.46337 .37693 m
.60989 .37693 L
s
.53663 .42221 m
.82967 .42221 L
s
.75641 .46749 m
.90293 .46749 L
s
.82967 .51276 m
.39011 .51276 L
s
.24359 .55804 m
.46337 .55804 L
s
.90293 .60332 m
.31685 .60332 L
s
1 g
.03462 w
.09707 .17319 m
.09707 .26374 L
s
.17033 .12791 m
.17033 .17319 L
s
.24359 .17319 m
.24359 .5354 L
s
.31685 .35429 m
.31685 .58068 L
s
.39011 .08263 m
.39011 .49013 L
s
.46337 .39957 m
.46337 .5354 L
s
.53663 .35429 m
.53663 .39957 L
s
.60989 .26374 m
.60989 .35429 L
s
.68315 .12791 m
.68315 .26374 L
s
.75641 .26374 m
.75641 .44485 L
s
.82967 .44485 m
.82967 .49013 L
s
.90293 .49013 m
.90293 .58068 L
s
.97619 .08263 m
.97619 .17319 L
s
0 g
.00769 w
.09707 .15055 m
.09707 .28638 L
s
.17033 .10527 m
.17033 .19582 L
s
.24359 .55804 m
.24359 .15055 L
s
.31685 .33166 m
.31685 .60332 L
s
.39011 .05999 m
.39011 .51276 L
s
.46337 .37693 m
.46337 .55804 L
s
.53663 .42221 m
.53663 .33166 L
s
.60989 .2411 m
.60989 .37693 L
s
.68315 .28638 m
.68315 .10527 L
s
.75641 .46749 m
.75641 .2411 L
s
.82967 .51276 m
.82967 .42221 L
s
.90293 .60332 m
.90293 .46749 L
s
.97619 .19582 m
.97619 .05999 L
s
MathSubEnd
P
% End of sub-graphic
% Start of sub-graphic
p
0.522676 0.00700719 0.97619 0.287295 MathSubStart
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.0732601 0.0147151 0.0452772 [
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
0 g
.00769 w
[ ] 0 setdash
.53663 .05999 m
.97619 .05999 L
s
.17033 .10527 m
.82967 .10527 L
s
.09707 .15055 m
.24359 .15055 L
s
.97619 .19582 m
.17033 .19582 L
s
.75641 .2411 m
.90293 .2411 L
s
.82967 .28638 m
.09707 .28638 L
s
.60989 .33166 m
.31685 .33166 L
s
.24359 .37693 m
.46337 .37693 L
s
.68315 .42221 m
.53663 .42221 L
s
.39011 .46749 m
.60989 .46749 L
s
.46337 .51276 m
.75641 .51276 L
s
.31685 .55804 m
.68315 .55804 L
s
.90293 .60332 m
.39011 .60332 L
s
1 g
.03462 w
.09707 .17319 m
.09707 .26374 L
s
.17033 .12791 m
.17033 .17319 L
s
.24359 .17319 m
.24359 .35429 L
s
.31685 .35429 m
.31685 .5354 L
s
.39011 .49013 m
.39011 .58068 L
s
.46337 .39957 m
.46337 .49013 L
s
.53663 .08263 m
.53663 .39957 L
s
.60989 .35429 m
.60989 .44485 L
s
.68315 .44485 m
.68315 .5354 L
s
.75641 .26374 m
.75641 .49013 L
s
.82967 .12791 m
.82967 .26374 L
s
.90293 .26374 m
.90293 .58068 L
s
.97619 .08263 m
.97619 .17319 L
s
0 g
.00769 w
.09707 .15055 m
.09707 .28638 L
s
.17033 .10527 m
.17033 .19582 L
s
.24359 .37693 m
.24359 .15055 L
s
.31685 .55804 m
.31685 .33166 L
s
.39011 .46749 m
.39011 .60332 L
s
.46337 .51276 m
.46337 .37693 L
s
.53663 .05999 m
.53663 .42221 L
s
.60989 .33166 m
.60989 .46749 L
s
.68315 .42221 m
.68315 .55804 L
s
.75641 .2411 m
.75641 .51276 L
s
.82967 .28638 m
.82967 .10527 L
s
.90293 .60332 m
.90293 .2411 L
s
.97619 .19582 m
.97619 .05999 L
s
MathSubEnd
P
% End of sub-graphic
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{520, 153},
  ImageMargins->{{43, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`4000880000VB000`400?l00000o`00003oo`3ooooo
0?ooo`X0oooo003o0?ooool0oooo2P3oool00?l0ooooo`3oool:0?ooo`00o`3ooooo0?ooo`X0oooo
003o0?ooool0oooo2P3oool00?l0ooooo`3oool:0?ooo`00o`3ooooo0?ooo`X0oooo003o0?ooool0
oooo2P3oool00?l0ooooo`3oool:0?ooo`00o`3ooooo0?ooo`X0oooo003o0?ooool0oooo2P3oool0
0?l0ooooo`3oool:0?ooo`00o`3ooooo0?ooo`X0oooo003o0?ooool0oooo2P3oool00?l0ooooo`3o
ool:0?ooo`00o`3ooooo0?ooo`X0oooo003o0?ooool0oooo2P3oool00?l0ooooo`3oool:0?ooo`00
J03ooon;000009T0ooooJ000000D0?ooo`00J03oool00`000000oooo0?ooo`270?ooo`030000003o
ool0oooo09L0oooo00<000000?ooo`3oool0I03oool00`000000oooo0?ooo`0B0?ooo`00J03oool0
0`000000oooo0?ooo`270?ooo`030000003oool0oooo09L0oooo00<000000?ooo`3oool0I03oool0
0`000000oooo0?ooo`0B0?ooo`00J03oool00`000000oooo0?ooo`270?ooo`030000003oool0oooo
09L0oooo00<000000?ooo`3oool0I03oool00`000000oooo0?ooo`0B0?ooo`00J03oool00`000000
oooo0?ooo`270?ooo`030000003oool0oooo09L0oooo00<000000?ooo`3oool0I03oool00`000000
oooo0?ooo`0B0?ooo`00J03oool00`000000oooo0?ooo`270?ooo`030000003oool0oooo09L0oooo
00<000000?ooo`3oool0I03oool00`000000oooo0?ooo`0B0?ooo`00J03oool00`000000oooo0?oo
o`270?ooo`030000003oool0oooo09L0oooo00<000000?ooo`3oool0I03oool00`000000oooo0?oo
o`0B0?ooo`00J03oool00`000000oooo0?ooo`270?ooo`030000003oool0oooo09L0oooo00<00000
0?ooo`3oool0I03oool00`000000oooo0?ooo`0B0?ooo`00J03oool00`000000oooo0?ooo`270?oo
o`030000003oool0oooo09L0oooo00<000000?ooo`3oool0I03oool00`000000oooo0?ooo`0B0?oo
o`00J03oool00`000000oooo0?ooo`270?ooo`030000003oool0oooo09L0oooo00<000000?ooo`3o
ool0I03oool00`000000oooo0?ooo`0B0?ooo`00J03oool00`000000oooo0?ooo`270?ooo`030000
003oool0oooo09L0oooo00<000000?ooo`3oool0I03oool00`000000oooo0?ooo`0B0?ooo`00=@3o
ool_000000@0oooo00@000000?ooo`3oool0oooo@P0000140?ooo`030000003oool0oooo0480oooo
D@0000040?ooo`040000003oool0oooo0?oood8000008@3oool00`000000oooo0?ooo`0B0?ooo`00
=@3oool00`000000oooo0?ooo`0`0?ooo`030000003oool0oooo0480oooo00<000000?ooo`3oool0
@P3oool00`000000oooo0?ooo`120?ooo`030000003oool0oooo0580oooo00<000000?ooo`3oool0
@P3oool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo0180oooo000e0?ooo`030000003o
ool0oooo0300oooo00<000000?ooo`3oool0@P3oool00`000000oooo0?ooo`120?ooo`030000003o
ool0oooo0480oooo00<000000?ooo`3oool0DP3oool00`000000oooo0?ooo`120?ooo`030000003o
ool0oooo01l0oooo00<000000?ooo`3oool04P3oool003D0oooo00<000000?ooo`3oool0<03oool0
0`000000oooo0?ooo`120?ooo`030000003oool0oooo0480oooo00<000000?ooo`3oool0@P3oool0
0`000000oooo0?ooo`1B0?ooo`030000003oool0oooo0480oooo00<000000?ooo`3oool07`3oool0
0`000000oooo0?ooo`0B0?ooo`00=@3oool00`000000oooo0?ooo`0`0?ooo`030000003oool0oooo
0480oooo00<000000?ooo`3oool0@P3oool00`000000oooo0?ooo`120?ooo`030000003oool0oooo
0580oooo00<000000?ooo`3oool0@P3oool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo
0180oooo000e0?ooo`030000003oool0oooo0300oooo00<000000?ooo`3oool0@P3oool00`000000
oooo0?ooo`120?ooo`030000003oool0oooo0480oooo00<000000?ooo`3oool0DP3oool00`000000
oooo0?ooo`120?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3oool04P3oool003D0oooo
00<000000?ooo`3oool0<03oool00`000000oooo0?ooo`120?ooo`030000003oool0oooo0480oooo
00<000000?ooo`3oool0@P3oool00`000000oooo0?ooo`1B0?ooo`030000003oool0oooo0480oooo
00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`0B0?ooo`00=@3oool00`000000oooo0?oo
o`0`0?ooo`030000003oool0oooo0480oooo00<000000?ooo`3oool0@P3oool00`000000oooo0?oo
o`120?ooo`030000003oool0oooo0580oooo00<000000?ooo`3oool0@P3oool00`000000oooo0?oo
o`0O0?ooo`030000003oool0oooo0180oooo000e0?ooo`030000003oool0oooo0300oooo00<00000
0?ooo`3oool0@P3oool00`000000oooo0?ooo`120?ooo`030000003oool0oooo0480oooo00<00000
0?ooo`3oool0DP3oool00`000000oooo0?ooo`120?ooo`030000003oool0oooo01l0oooo00<00000
0?ooo`3oool04P3oool003D0oooo00<000000?ooo`3oool0<03oool00`000000oooo0?ooo`120?oo
o`030000003oool0oooo0480oooo00<000000?ooo`3oool0@P3oool00`000000oooo0?ooo`1B0?oo
o`030000003oool0oooo0480oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`0B0?oo
o`00903oool=000000@0oooo00@000000?ooo`3oool0oooo3P00000Q0?ooo`030000003oool0oooo
0480oooo00<000000?ooo`3oool0@P3oool00`000000oooo0?ooo`0`0?ooo`h00000103oool01000
0000oooo0?ooo`3oool>000004<0oooo00<000000?ooo`3oool0@P3oool00`000000oooo0?ooo`0O
0?ooo`030000003oool0oooo0180oooo000T0?ooo`030000003oool0oooo00h0oooo00<000000?oo
o`3oool03P3oool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo0480oooo00<000000?oo
o`3oool0@P3oool00`000000oooo0?ooo`0`0?ooo`030000003oool0oooo00l0oooo00<000000?oo
o`3oool03P3oool00`000000oooo0?ooo`110?ooo`030000003oool0oooo0480oooo00<000000?oo
o`3oool07`3oool00`000000oooo0?ooo`0B0?ooo`00903oool00`000000oooo0?ooo`0>0?ooo`03
0000003oool0oooo00h0oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`120?ooo`03
0000003oool0oooo0480oooo00<000000?ooo`3oool0<03oool00`000000oooo0?ooo`0?0?ooo`03
0000003oool0oooo00h0oooo00<000000?ooo`3oool0@@3oool00`000000oooo0?ooo`120?ooo`03
0000003oool0oooo01l0oooo00<000000?ooo`3oool04P3oool002@0oooo00<000000?ooo`3oool0
3P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3oool0
@P3oool00`000000oooo0?ooo`120?ooo`030000003oool0oooo0300oooo00<000000?ooo`3oool0
3`3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo0440oooo00<000000?ooo`3oool0
@P3oool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo0180oooo000T0?ooo`030000003o
ool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0O0?ooo`030000003o
ool0oooo0480oooo00<000000?ooo`3oool0@P3oool00`000000oooo0?ooo`0`0?ooo`030000003o
ool0oooo00l0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`110?ooo`030000003o
ool0oooo0480oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`0B0?ooo`00903oool0
0`000000oooo0?ooo`0>0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool07`3oool0
0`000000oooo0?ooo`120?ooo`030000003oool0oooo0480oooo00<000000?ooo`3oool0<03oool0
0`000000oooo0?ooo`0?0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool0@@3oool0
0`000000oooo0?ooo`120?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3oool04P3oool0
02@0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo
01l0oooo00<000000?ooo`3oool0@P3oool00`000000oooo0?ooo`120?ooo`030000003oool0oooo
0300oooo00<000000?ooo`3oool03`3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo
0440oooo00<000000?ooo`3oool0@P3oool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo
0180oooo000T0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000
oooo0?ooo`0O0?ooo`030000003oool0oooo0480oooo00<000000?ooo`3oool0@P3oool00`000000
oooo0?ooo`0`0?ooo`030000003oool0oooo00l0oooo00<000000?ooo`3oool03P3oool00`000000
oooo0?ooo`110?ooo`030000003oool0oooo0480oooo00<000000?ooo`3oool07`3oool00`000000
oooo0?ooo`0B0?ooo`00903oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo00h0oooo
00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`120?ooo`030000003oool0oooo0480oooo
00<000000?ooo`3oool0<03oool00`000000oooo0?ooo`0?0?ooo`030000003oool0oooo00h0oooo
00<000000?ooo`3oool0@@3oool00`000000oooo0?ooo`120?ooo`030000003oool0oooo01l0oooo
00<000000?ooo`3oool04P3oool002@0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?oo
o`0>0?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3oool0@P3oool00`000000oooo0?oo
o`120?ooo`030000003oool0oooo0300oooo00<000000?ooo`3oool03`3oool00`000000oooo0?oo
o`0>0?ooo`030000003oool0oooo0440oooo00<000000?ooo`3oool0@P3oool00`000000oooo0?oo
o`0O0?ooo`030000003oool0oooo0180oooo000T0?ooo`030000003oool0oooo00h0oooo00<00000
0?ooo`3oool03P3oool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo0480oooo00<00000
0?ooo`3oool0@P3oool00`000000oooo0?ooo`0`0?ooo`030000003oool0oooo00l0oooo00<00000
0?ooo`3oool03P3oool00`000000oooo0?ooo`110?ooo`030000003oool0oooo0480oooo00<00000
0?ooo`3oool07`3oool00`000000oooo0?ooo`0B0?ooo`00903oool00`000000oooo0?ooo`0>0?oo
o`d00000103oool010000000oooo0?ooo`3ooolJ000000@0oooo00@000000?ooo`3oool0oooo?@00
00040?ooo`040000003oool0oooo0?oood800000<P3oool00`000000oooo0?ooo`0?0?ooo`d00000
103oool010000000oooo0?ooo`3oooll000000@0oooo00@000000?ooo`3oool0oooo?@0000040?oo
o`040000003oool0oooo0?oooal00000503oool002@0oooo00<000000?ooo`3oool07`3oool00`00
0000oooo0?ooo`0O0?ooo`030000003oool0oooo0480oooo00<000000?ooo`3oool0M@3oool00`00
0000oooo0?ooo`0P0?ooo`030000003oool0oooo0440oooo00<000000?ooo`3oool0@P3oool00`00
0000oooo0?ooo`0d0?ooo`00903oool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo01l0
oooo00<000000?ooo`3oool0@P3oool00`000000oooo0?ooo`1e0?ooo`030000003oool0oooo0200
oooo00<000000?ooo`3oool0@@3oool00`000000oooo0?ooo`120?ooo`030000003oool0oooo03@0
oooo000T0?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3oool07`3oool00`000000oooo
0?ooo`120?ooo`030000003oool0oooo07D0oooo00<000000?ooo`3oool0803oool00`000000oooo
0?ooo`110?ooo`030000003oool0oooo0480oooo00<000000?ooo`3oool0=03oool002@0oooo00<0
00000?ooo`3oool07`3oool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo0480oooo00<0
00000?ooo`3oool0M@3oool00`000000oooo0?ooo`0P0?ooo`030000003oool0oooo0440oooo00<0
00000?ooo`3oool0@P3oool00`000000oooo0?ooo`0d0?ooo`00903oool00`000000oooo0?ooo`0O
0?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3oool0@P3oool00`000000oooo0?ooo`1e
0?ooo`030000003oool0oooo0200oooo00<000000?ooo`3oool0@@3oool00`000000oooo0?ooo`12
0?ooo`030000003oool0oooo03@0oooo000T0?ooo`030000003oool0oooo01l0oooo00<000000?oo
o`3oool07`3oool00`000000oooo0?ooo`120?ooo`030000003oool0oooo07D0oooo00<000000?oo
o`3oool0803oool00`000000oooo0?ooo`110?ooo`030000003oool0oooo0480oooo00<000000?oo
o`3oool0=03oool002@0oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`0O0?ooo`03
0000003oool0oooo0480oooo00<000000?ooo`3oool0M@3oool00`000000oooo0?ooo`0P0?ooo`03
0000003oool0oooo0440oooo00<000000?ooo`3oool0@P3oool00`000000oooo0?ooo`0d0?ooo`00
903oool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3oool0
@P3oool00`000000oooo0?ooo`1e0?ooo`030000003oool0oooo0200oooo00<000000?ooo`3oool0
@@3oool00`000000oooo0?ooo`120?ooo`030000003oool0oooo03@0oooo000T0?ooo`030000003o
ool0oooo01l0oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`120?ooo`030000003o
ool0oooo07D0oooo00<000000?ooo`3oool0803oool00`000000oooo0?ooo`110?ooo`030000003o
ool0oooo0480oooo00<000000?ooo`3oool0=03oool002@0oooo00<000000?ooo`3oool07`3oool0
0`000000oooo0?ooo`0O0?ooo`030000003oool0oooo0480oooo00<000000?ooo`3oool0M@3oool0
0`000000oooo0?ooo`0P0?ooo`030000003oool0oooo0440oooo00<000000?ooo`3oool0@P3oool0
0`000000oooo0?ooo`0d0?ooo`00903oool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo
01l0oooo00<000000?ooo`3oool0<@3oool=000000@0oooo00@000000?ooo`3oool0oooo3P00001V
0?ooo`030000003oool0oooo0200oooo00<000000?ooo`3oool0@@3oool00`000000oooo0?ooo`0a
0?ooo`d00000103oool010000000oooo0?ooo`3oool>000002D0oooo000T0?ooo`030000003oool0
oooo01l0oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`0a0?ooo`030000003oool0
oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`1T0?ooo`030000003oool0
oooo0200oooo00<000000?ooo`3oool0@@3oool00`000000oooo0?ooo`0a0?ooo`030000003oool0
oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0S0?ooo`00903oool00`00
0000oooo0?ooo`0O0?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3oool0<@3oool00`00
0000oooo0?ooo`0>0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool0I03oool00`00
0000oooo0?ooo`0P0?ooo`030000003oool0oooo0440oooo00<000000?ooo`3oool0<@3oool00`00
0000oooo0?ooo`0>0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool08`3oool002@0
oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo0340
oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo06@0
oooo00<000000?ooo`3oool0803oool00`000000oooo0?ooo`110?ooo`030000003oool0oooo0340
oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo02<0
oooo000T0?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3oool07`3oool00`000000oooo
0?ooo`0a0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo
0?ooo`1T0?ooo`030000003oool0oooo0200oooo00<000000?ooo`3oool0@@3oool00`000000oooo
0?ooo`0a0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo
0?ooo`0S0?ooo`00903oool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo01l0oooo00<0
00000?ooo`3oool0<@3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo00h0oooo00<0
00000?ooo`3oool0I03oool00`000000oooo0?ooo`0P0?ooo`030000003oool0oooo0440oooo00<0
00000?ooo`3oool0<@3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo00h0oooo00<0
00000?ooo`3oool08`3oool002@0oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`0O
0?ooo`030000003oool0oooo0340oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0>
0?ooo`030000003oool0oooo06@0oooo00<000000?ooo`3oool0803oool00`000000oooo0?ooo`11
0?ooo`030000003oool0oooo0340oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0>
0?ooo`030000003oool0oooo02<0oooo000T0?ooo`030000003oool0oooo01l0oooo00<000000?oo
o`3oool07`3oool00`000000oooo0?ooo`0a0?ooo`030000003oool0oooo00h0oooo00<000000?oo
o`3oool03P3oool00`000000oooo0?ooo`1T0?ooo`030000003oool0oooo0200oooo00<000000?oo
o`3oool0@@3oool00`000000oooo0?ooo`0a0?ooo`030000003oool0oooo00h0oooo00<000000?oo
o`3oool03P3oool00`000000oooo0?ooo`0S0?ooo`00903oool00`000000oooo0?ooo`0O0?ooo`03
0000003oool0oooo01l0oooo00<000000?ooo`3oool0<@3oool00`000000oooo0?ooo`0>0?ooo`03
0000003oool0oooo00h0oooo00<000000?ooo`3oool0I03oool00`000000oooo0?ooo`0P0?ooo`03
0000003oool0oooo0440oooo00<000000?ooo`3oool0<@3oool00`000000oooo0?ooo`0>0?ooo`03
0000003oool0oooo00h0oooo00<000000?ooo`3oool08`3oool002@0oooo00<000000?ooo`3oool0
7`3oool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo0340oooo00<000000?ooo`3oool0
3P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo06@0oooo00<000000?ooo`3oool0
803oool00`000000oooo0?ooo`110?ooo`030000003oool0oooo0340oooo00<000000?ooo`3oool0
3P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo02<0oooo000T0?oooah00000103o
ool010000000oooo0?ooo`3ooolJ000000@0oooo00@000000?ooo`3oool0oooo;00000040?ooo`04
0000003oool0oooo0?ooo`h00000403oool00`000000oooo0?ooo`1T0?oooal00000103oool01000
0000oooo0?ooo`3oooll000000@0oooo00@000000?ooo`3oool0oooo;00000040?ooo`040000003o
ool0oooo0?ooo`h00000403oool00`000000oooo0?ooo`0S0?ooo`00AP3oool00`000000oooo0?oo
o`0O0?ooo`030000003oool0oooo0340oooo00<000000?ooo`3oool07`3oool00`000000oooo0?oo
o`270?ooo`030000003oool0oooo0440oooo00<000000?ooo`3oool0<@3oool00`000000oooo0?oo
o`0O0?ooo`030000003oool0oooo02<0oooo00160?ooo`030000003oool0oooo01l0oooo00<00000
0?ooo`3oool0<@3oool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo08L0oooo00<00000
0?ooo`3oool0@@3oool00`000000oooo0?ooo`0a0?ooo`030000003oool0oooo01l0oooo00<00000
0?ooo`3oool08`3oool004H0oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`0a0?oo
o`030000003oool0oooo01l0oooo00<000000?ooo`3oool0Q`3oool00`000000oooo0?ooo`110?oo
o`030000003oool0oooo0340oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`0S0?oo
o`00AP3oool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo0340oooo00<000000?ooo`3o
ool07`3oool00`000000oooo0?ooo`270?ooo`030000003oool0oooo0440oooo00<000000?ooo`3o
ool0<@3oool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo02<0oooo00160?ooo`030000
003oool0oooo01l0oooo00<000000?ooo`3oool0<@3oool00`000000oooo0?ooo`0O0?ooo`030000
003oool0oooo08L0oooo00<000000?ooo`3oool0@@3oool00`000000oooo0?ooo`0a0?ooo`030000
003oool0oooo01l0oooo00<000000?ooo`3oool08`3oool004H0oooo00<000000?ooo`3oool07`3o
ool00`000000oooo0?ooo`0a0?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3oool0Q`3o
ool00`000000oooo0?ooo`110?ooo`030000003oool0oooo0340oooo00<000000?ooo`3oool07`3o
ool00`000000oooo0?ooo`0S0?ooo`00AP3oool00`000000oooo0?ooo`0O0?ooo`030000003oool0
oooo0340oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`270?ooo`030000003oool0
oooo0440oooo00<000000?ooo`3oool0<@3oool00`000000oooo0?ooo`0O0?ooo`030000003oool0
oooo02<0oooo00160?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3oool0<@3oool00`00
0000oooo0?ooo`0O0?ooo`030000003oool0oooo08L0oooo00<000000?ooo`3oool0@@3oool00`00
0000oooo0?ooo`0a0?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3oool08`3oool004H0
oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`0a0?ooo`030000003oool0oooo01l0
oooo00<000000?ooo`3oool0Q`3oool00`000000oooo0?ooo`110?ooo`030000003oool0oooo0340
oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`0S0?ooo`00AP3oool00`000000oooo
0?ooo`0O0?ooo`030000003oool0oooo0340oooo00<000000?ooo`3oool07`3oool00`000000oooo
0?ooo`270?ooo`030000003oool0oooo0440oooo00<000000?ooo`3oool0<@3oool00`000000oooo
0?ooo`0O0?ooo`030000003oool0oooo02<0oooo00160?ooo`030000003oool0oooo00h0oooo3@00
00040?ooo`040000003oool0oooo0?ooob000000403oool00`000000oooo0?ooo`0O0?ooo`030000
003oool0oooo08L0oooo00<000000?ooo`3oool03P3oool_000000@0oooo00@000000?ooo`3oool0
oooo3`00000Q0?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3oool08`3oool004H0oooo
00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo0200oooo
00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo08L0oooo
00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0`0?ooo`030000003oool0oooo00l0oooo
00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo02<0oooo
00160?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?oo
o`0P0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool07`3oool00`000000oooo0?oo
o`270?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool0<03oool00`000000oooo0?oo
o`0?0?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3oool07`3oool00`000000oooo0?oo
o`0S0?ooo`00AP3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo00h0oooo00<00000
0?ooo`3oool0803oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo01l0oooo00<00000
0?ooo`3oool0Q`3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo0300oooo00<00000
0?ooo`3oool03`3oool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo01l0oooo00<00000
0?ooo`3oool08`3oool004H0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0>0?oo
o`030000003oool0oooo0200oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0O0?oo
o`030000003oool0oooo08L0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0`0?oo
o`030000003oool0oooo00l0oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`0O0?oo
o`030000003oool0oooo02<0oooo00160?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3o
ool03P3oool00`000000oooo0?ooo`0P0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3o
ool07`3oool00`000000oooo0?ooo`270?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3o
ool0<03oool00`000000oooo0?ooo`0?0?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3o
ool07`3oool00`000000oooo0?ooo`0S0?ooo`00AP3oool00`000000oooo0?ooo`0>0?ooo`030000
003oool0oooo00h0oooo00<000000?ooo`3oool0803oool00`000000oooo0?ooo`0>0?ooo`030000
003oool0oooo01l0oooo00<000000?ooo`3oool0Q`3oool00`000000oooo0?ooo`0>0?ooo`030000
003oool0oooo0300oooo00<000000?ooo`3oool03`3oool00`000000oooo0?ooo`0O0?ooo`030000
003oool0oooo01l0oooo00<000000?ooo`3oool08`3oool004H0oooo00<000000?ooo`3oool03P3o
ool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo0200oooo00<000000?ooo`3oool03P3o
ool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo08L0oooo00<000000?ooo`3oool03P3o
ool00`000000oooo0?ooo`0`0?ooo`030000003oool0oooo00l0oooo00<000000?ooo`3oool07`3o
ool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo02<0oooo00160?ooo`030000003oool0
oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0P0?ooo`030000003oool0
oooo00h0oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`270?ooo`030000003oool0
oooo00h0oooo00<000000?ooo`3oool0<03oool00`000000oooo0?ooo`0?0?ooo`030000003oool0
oooo01l0oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`0S0?ooo`00AP3oool00`00
0000oooo0?ooo`0>0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool0803oool00`00
0000oooo0?ooo`0>0?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3oool0Q`3oool00`00
0000oooo0?ooo`0>0?ooo`030000003oool0oooo0300oooo00<000000?ooo`3oool03`3oool00`00
0000oooo0?ooo`0O0?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3oool08`3oool004H0
oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo00l0
oooo3@0000040?ooo`040000003oool0oooo0?ooo`h000008@3oool00`000000oooo0?ooo`270?oo
o`d00000103oool010000000oooo0?ooo`3ooolO00000100oooo00<000000?ooo`3oool03`3oool0
0`000000oooo0?ooo`0O0?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3oool08`3oool0
04H0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo
00l0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0`0?ooo`030000003oool0oooo
09P0oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo
00l0oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo
02<0oooo00160?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000
oooo0?ooo`0?0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool0<03oool00`000000
oooo0?ooo`2H0?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3oool03P3oool00`000000
oooo0?ooo`0?0?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3oool07`3oool00`000000
oooo0?ooo`0S0?ooo`00AP3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo00h0oooo
00<000000?ooo`3oool03`3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo0300oooo
00<000000?ooo`3oool0V03oool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo00h0oooo
00<000000?ooo`3oool03`3oool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo01l0oooo
00<000000?ooo`3oool08`3oool004H0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?oo
o`0>0?ooo`030000003oool0oooo00l0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?oo
o`0`0?ooo`030000003oool0oooo09P0oooo00<000000?ooo`3oool07`3oool00`000000oooo0?oo
o`0>0?ooo`030000003oool0oooo00l0oooo00<000000?ooo`3oool07`3oool00`000000oooo0?oo
o`0O0?ooo`030000003oool0oooo02<0oooo00160?ooo`030000003oool0oooo00h0oooo00<00000
0?ooo`3oool03P3oool00`000000oooo0?ooo`0?0?ooo`030000003oool0oooo00h0oooo00<00000
0?ooo`3oool0<03oool00`000000oooo0?ooo`2H0?ooo`030000003oool0oooo01l0oooo00<00000
0?ooo`3oool03P3oool00`000000oooo0?ooo`0?0?ooo`030000003oool0oooo01l0oooo00<00000
0?ooo`3oool07`3oool00`000000oooo0?ooo`0S0?ooo`00AP3oool00`000000oooo0?ooo`0>0?oo
o`030000003oool0oooo00h0oooo00<000000?ooo`3oool03`3oool00`000000oooo0?ooo`0>0?oo
o`030000003oool0oooo0300oooo00<000000?ooo`3oool0V03oool00`000000oooo0?ooo`0O0?oo
o`030000003oool0oooo00h0oooo00<000000?ooo`3oool03`3oool00`000000oooo0?ooo`0O0?oo
o`030000003oool0oooo01l0oooo00<000000?ooo`3oool08`3oool004H0oooo00<000000?ooo`3o
ool03P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo00l0oooo00<000000?ooo`3o
ool03P3oool00`000000oooo0?ooo`0`0?ooo`030000003oool0oooo09P0oooo00<000000?ooo`3o
ool07`3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo00l0oooo00<000000?ooo`3o
ool07`3oool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo02<0oooo00160?ooo`030000
003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0?0?ooo`030000
003oool0oooo00h0oooo00<000000?ooo`3oool0<03oool00`000000oooo0?ooo`2H0?ooo`030000
003oool0oooo01l0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0?0?ooo`030000
003oool0oooo01l0oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`0S0?ooo`00AP3o
ool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03`3o
ool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo0300oooo00<000000?ooo`3oool0V03o
ool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03`3o
ool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3oool08`3o
ool004H0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0
oooo00l0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0`0?ooo`030000003oool0
oooo09P0oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0
oooo00l0oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`0O0?ooo`030000003oool0
oooo02<0oooo00160?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`00
0000oooo0?ooo`0?0?ooo`030000003oool0oooo00h0oooo;`0000040?ooo`040000003oool0oooo
0?ooo`h00000R@3oool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo00h0oooo3P000004
0?ooo`040000003oool0oooo0?ooo`h00000403oool00`000000oooo0?ooo`0O0?ooo`030000003o
ool0oooo02<0oooo00160?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool0
0`000000oooo0?ooo`0?0?ooo`030000003oool0oooo0440oooo00<000000?ooo`3oool03P3oool0
0`000000oooo0?ooo`270?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3oool0803oool0
0`000000oooo0?ooo`0>0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool07`3oool0
0`000000oooo0?ooo`0S0?ooo`00AP3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo
00h0oooo00<000000?ooo`3oool03`3oool00`000000oooo0?ooo`110?ooo`030000003oool0oooo
00h0oooo00<000000?ooo`3oool0Q`3oool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo
0200oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo
01l0oooo00<000000?ooo`3oool08`3oool004H0oooo00<000000?ooo`3oool03P3oool00`000000
oooo0?ooo`0>0?ooo`030000003oool0oooo00l0oooo00<000000?ooo`3oool0@@3oool00`000000
oooo0?ooo`0>0?ooo`030000003oool0oooo08L0oooo00<000000?ooo`3oool07`3oool00`000000
oooo0?ooo`0P0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000
oooo0?ooo`0O0?ooo`030000003oool0oooo02<0oooo00160?ooo`030000003oool0oooo00h0oooo
00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0?0?ooo`030000003oool0oooo0440oooo
00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`270?ooo`030000003oool0oooo01l0oooo
00<000000?ooo`3oool0803oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo00h0oooo
00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`0S0?ooo`00AP3oool00`000000oooo0?oo
o`0>0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03`3oool00`000000oooo0?oo
o`110?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool0Q`3oool00`000000oooo0?oo
o`0O0?ooo`030000003oool0oooo0200oooo00<000000?ooo`3oool03P3oool00`000000oooo0?oo
o`0>0?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3oool08`3oool004H0oooo00<00000
0?ooo`3oool03P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo00l0oooo00<00000
0?ooo`3oool0@@3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo08L0oooo00<00000
0?ooo`3oool07`3oool00`000000oooo0?ooo`0P0?ooo`030000003oool0oooo00h0oooo00<00000
0?ooo`3oool03P3oool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo02<0oooo00160?oo
o`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0?0?oo
o`030000003oool0oooo0440oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`270?oo
o`030000003oool0oooo01l0oooo00<000000?ooo`3oool0803oool00`000000oooo0?ooo`0>0?oo
o`030000003oool0oooo00h0oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`0S0?oo
o`00AP3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3o
ool03`3oool00`000000oooo0?ooo`110?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3o
ool0Q`3oool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo0200oooo00<000000?ooo`3o
ool03P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3o
ool08`3oool004H0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0>0?ooo`030000
003oool0oooo00l0oooo00<000000?ooo`3oool0@@3oool00`000000oooo0?ooo`0>0?ooo`030000
003oool0oooo08L0oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`0P0?ooo`030000
003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0O0?ooo`030000
003oool0oooo02<0oooo00160?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3o
ool00`000000oooo0?ooo`0?0?ooo`030000003oool0oooo0440oooo00<000000?ooo`3oool03P3o
ool00`000000oooo0?ooo`270?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3oool0803o
ool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool07`3o
ool00`000000oooo0?ooo`0S0?ooo`00AP3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0
oooo00h0oooo00<000000?ooo`3oool03`3oool00`000000oooo0?ooo`110?ooo`d00000103oool0
10000000oooo0?ooo`3oool?000007L0oooo00<000000?ooo`3oool03P3oool=000000@0oooo00@0
00000?ooo`3oool0oooo8000000@0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool0
7`3oool00`000000oooo0?ooo`0S0?ooo`00AP3oool00`000000oooo0?ooo`0>0?ooo`030000003o
ool0oooo00h0oooo00<000000?ooo`3oool03`3oool00`000000oooo0?ooo`1B0?ooo`030000003o
ool0oooo00l0oooo00<000000?ooo`3oool0M@3oool00`000000oooo0?ooo`0>0?ooo`030000003o
ool0oooo00h0oooo00<000000?ooo`3oool0<@3oool00`000000oooo0?ooo`0>0?ooo`030000003o
ool0oooo01l0oooo00<000000?ooo`3oool08`3oool004H0oooo00<000000?ooo`3oool03P3oool0
0`000000oooo0?ooo`0>0?ooo`030000003oool0oooo00l0oooo00<000000?ooo`3oool0DP3oool0
0`000000oooo0?ooo`0?0?ooo`030000003oool0oooo07D0oooo00<000000?ooo`3oool03P3oool0
0`000000oooo0?ooo`0>0?ooo`030000003oool0oooo0340oooo00<000000?ooo`3oool03P3oool0
0`000000oooo0?ooo`0O0?ooo`030000003oool0oooo02<0oooo00160?ooo`030000003oool0oooo
00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0?0?ooo`030000003oool0oooo
0580oooo00<000000?ooo`3oool03`3oool00`000000oooo0?ooo`1e0?ooo`030000003oool0oooo
00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0a0?ooo`030000003oool0oooo
00h0oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`0S0?ooo`00AP3oool00`000000
oooo0?ooo`0>0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03`3oool00`000000
oooo0?ooo`1B0?ooo`030000003oool0oooo00l0oooo00<000000?ooo`3oool0M@3oool00`000000
oooo0?ooo`0>0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool0<@3oool00`000000
oooo0?ooo`0>0?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3oool08`3oool004H0oooo
00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo00l0oooo
00<000000?ooo`3oool0DP3oool00`000000oooo0?ooo`0?0?ooo`030000003oool0oooo07D0oooo
00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo0340oooo
00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo02<0oooo
00160?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?oo
o`0?0?ooo`030000003oool0oooo0580oooo00<000000?ooo`3oool03`3oool00`000000oooo0?oo
o`1e0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?oo
o`0a0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool07`3oool00`000000oooo0?oo
o`0S0?ooo`00AP3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo00h0oooo00<00000
0?ooo`3oool03`3oool00`000000oooo0?ooo`1B0?ooo`030000003oool0oooo00l0oooo00<00000
0?ooo`3oool0M@3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo00h0oooo00<00000
0?ooo`3oool0<@3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo01l0oooo00<00000
0?ooo`3oool08`3oool004H0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0>0?oo
o`030000003oool0oooo00l0oooo00<000000?ooo`3oool0DP3oool00`000000oooo0?ooo`0?0?oo
o`030000003oool0oooo07D0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0>0?oo
o`030000003oool0oooo0340oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0O0?oo
o`030000003oool0oooo02<0oooo00160?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3o
ool03P3oool00`000000oooo0?ooo`0?0?ooo`030000003oool0oooo0580oooo00<000000?ooo`3o
ool03`3oool00`000000oooo0?ooo`1e0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3o
ool03P3oool00`000000oooo0?ooo`0a0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3o
ool07`3oool00`000000oooo0?ooo`0S0?ooo`00AP3oool00`000000oooo0?ooo`0>0?ooo`030000
003oool0oooo00h0oooo3P0000040?ooo`040000003oool0oooo0?oooe8000004@3oool00`000000
oooo0?ooo`1e0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool`000000@0
oooo00@000000?ooo`3oool0oooo3P00000Q0?ooo`030000003oool0oooo02<0oooo00160?ooo`03
0000003oool0oooo00h0oooo00<000000?ooo`3oool0803oool00`000000oooo0?ooo`1T0?ooo`03
0000003oool0oooo07D0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`120?ooo`03
0000003oool0oooo0300oooo00<000000?ooo`3oool08`3oool004H0oooo00<000000?ooo`3oool0
3P3oool00`000000oooo0?ooo`0P0?ooo`030000003oool0oooo06@0oooo00<000000?ooo`3oool0
M@3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo0480oooo00<000000?ooo`3oool0
<03oool00`000000oooo0?ooo`0S0?ooo`00AP3oool00`000000oooo0?ooo`0>0?ooo`030000003o
ool0oooo0200oooo00<000000?ooo`3oool0I03oool00`000000oooo0?ooo`1e0?ooo`030000003o
ool0oooo00h0oooo00<000000?ooo`3oool0@P3oool00`000000oooo0?ooo`0`0?ooo`030000003o
ool0oooo02<0oooo00160?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool0803oool0
0`000000oooo0?ooo`1T0?ooo`030000003oool0oooo07D0oooo00<000000?ooo`3oool03P3oool0
0`000000oooo0?ooo`120?ooo`030000003oool0oooo0300oooo00<000000?ooo`3oool08`3oool0
04H0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0P0?ooo`030000003oool0oooo
06@0oooo00<000000?ooo`3oool0M@3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo
0480oooo00<000000?ooo`3oool0<03oool00`000000oooo0?ooo`0S0?ooo`00AP3oool00`000000
oooo0?ooo`0>0?ooo`030000003oool0oooo0200oooo00<000000?ooo`3oool0I03oool00`000000
oooo0?ooo`1e0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool0@P3oool00`000000
oooo0?ooo`0`0?ooo`030000003oool0oooo02<0oooo00160?ooo`030000003oool0oooo00h0oooo
00<000000?ooo`3oool0803oool00`000000oooo0?ooo`1T0?ooo`030000003oool0oooo07D0oooo
00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`120?ooo`030000003oool0oooo0300oooo
00<000000?ooo`3oool08`3oool004H0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?oo
o`0P0?ooo`030000003oool0oooo06@0oooo00<000000?ooo`3oool0M@3oool00`000000oooo0?oo
o`0>0?ooo`030000003oool0oooo0480oooo00<000000?ooo`3oool0<03oool00`000000oooo0?oo
o`0S0?ooo`00AP3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo0200oooo00<00000
0?ooo`3oool0I03oool00`000000oooo0?ooo`1e0?ooo`030000003oool0oooo00h0oooo00<00000
0?ooo`3oool0@P3oool00`000000oooo0?ooo`0`0?ooo`030000003oool0oooo02<0oooo00160?oo
o`030000003oool0oooo00h0oooo00<000000?ooo`3oool0803oool00`000000oooo0?ooo`1T0?oo
o`030000003oool0oooo07D0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`120?oo
o`030000003oool0oooo0300oooo00<000000?ooo`3oool08`3oool004H0oooo3@0000040?ooo`04
0000003oool0oooo0?ooob000000IP3oool00`000000oooo0?ooo`1e0?ooo`d00000103oool01000
0000oooo0?ooo`3ooom200000380oooo00<000000?ooo`3oool08`3oool005L0oooo00<000000?oo
o`3oool0Q`3oool00`000000oooo0?ooo`260?ooo`030000003oool0oooo07D0oooo00<000000?oo
o`3oool08`3oool005L0oooo00<000000?ooo`3oool0Q`3oool00`000000oooo0?ooo`260?ooo`03
0000003oool0oooo07D0oooo00<000000?ooo`3oool08`3oool005L0oooo00<000000?ooo`3oool0
Q`3oool00`000000oooo0?ooo`260?ooo`030000003oool0oooo07D0oooo00<000000?ooo`3oool0
8`3oool005L0oooo00<000000?ooo`3oool0Q`3oool00`000000oooo0?ooo`260?ooo`030000003o
ool0oooo07D0oooo00<000000?ooo`3oool08`3oool005L0oooo00<000000?ooo`3oool0Q`3oool0
0`000000oooo0?ooo`260?ooo`030000003oool0oooo07D0oooo00<000000?ooo`3oool08`3oool0
05L0oooo00<000000?ooo`3oool0Q`3oool00`000000oooo0?ooo`260?ooo`030000003oool0oooo
07D0oooo00<000000?ooo`3oool08`3oool005L0oooo00<000000?ooo`3oool0Q`3oool00`000000
oooo0?ooo`260?ooo`030000003oool0oooo07D0oooo00<000000?ooo`3oool08`3oool005L0oooo
00<000000?ooo`3oool0Q`3oool00`000000oooo0?ooo`260?ooo`030000003oool0oooo07D0oooo
00<000000?ooo`3oool08`3oool005L0oooo00<000000?ooo`3oool0Q`3oool00`000000oooo0?oo
o`260?ooo`030000003oool0oooo07D0oooo00<000000?ooo`3oool08`3oool005L0ooooR`000028
0?ooogT000009@3oool00?l0ooooo`3oool:0?ooo`00o`3ooooo0?ooo`X0oooo003o0?ooool0oooo
2P3oool00?l0ooooo`3oool:0?ooo`00o`3ooooo0?ooo`X0oooo003o0?ooool0oooo2P3oool00?l0
ooooo`3oool:0?ooo`00\
\>"],
  ImageRangeCache->{{{0, 519}, {152, 0}} -> {-0.0551341, -0.0147182, \
0.00406603, 0.00406603}, {{13.5, 247.75}, {148.375, 3.5625}} -> {-1.11173, \
-0.668691, 0.0582716, 0.0942856}, {{271.188, 505.438}, {148.375, 3.5625}} -> \
{-16.1276, -0.668691, 0.0582716, 0.0942856}}],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  GraphicsArray  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Length\  /@ \ {PlanarGridDiagram[Knot["\<K11n34\>"]], \ 
        PlanarGridDiagram[Knot["\<K11n42\>"]]}\)], "Input"],

Cell[BoxData[
    \({13, 13}\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(\(\(Show[Draw[PlanarGridDiagram[#]]] &\)\  /@ \ 
        AllKnots[{0, 8}];\)\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(Alex[
          K_]\  := \ \((\[IndentingNewLine]mat = 
            MinesweeperMatrix[PlanarGridDiagram[K]]; \[IndentingNewLine]pol = 
            Expand[Factor[
                Det[t^mat]/\((t - 1)\)^\((Length[mat] - 
                        1)\)]]; \[IndentingNewLine]Expand[
            pol/t^\((\((Exponent[pol, t, Min] + Exponent[pol, t, Max])\)/
                    2)\)]\[IndentingNewLine])\);\)\), "\[IndentingNewLine]", 
    \(Timing[
      Plus\  @@ \ \(Last\  /@ \ \
\((\[IndentingNewLine]\(\((\[IndentingNewLine]alex = 
                    Alex[#]; \[IndentingNewLine]#\  \[Rule] \ \((alex \
\[Equal] \(Alexander[#]\)[t]\  || 
                        Expand[\(-alex\)] \[Equal] \(Alexander[#]\)[
                            t])\)\[IndentingNewLine])\) &\)\  /@ \ 
              AllKnots[]\[IndentingNewLine])\)\)]\)}], "Input"],

Cell[BoxData[
    \({34.218`\ Second, 802\ True}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\((t^\((MM = MinesweeperMatrix[Knot[3, 1]])\))\)\  // \ 
        Reverse\)\  // \ MatrixForm\)], "Input"],

Cell[BoxData[
    TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
            {"1", "1", "1", "1", "1"},
            {"t", "t", "t", "1", "1"},
            {"t", "t", "1", \(1\/t\), "1"},
            {"t", "1", \(1\/t\), \(1\/t\), "1"},
            {"1", \(1\/t\), \(1\/t\), \(1\/t\), "1"}
            },
          RowSpacings->1,
          ColumnSpacings->1,
          ColumnAlignments->{Left}], "\[NoBreak]", ")"}],
      Function[ BoxForm`e$, 
        MatrixForm[ BoxForm`e$]]]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\((NM = \(NeuwirthMatrix[PlanarGridDiagram[Knot[4, 1]]]\)[t])\)\  // \ 
      MatrixForm\)], "Input"],

Cell[BoxData[
    TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
            {\(1\/t\), \(1\/t\), \(1\/t\), \(1\/t\), "1", "1"},
            {"0", \(-\(1\/t\)\), \(-\(1\/t\)\), \(-\(1\/t\^2\)\), "0", "0"},
            {\(-\(1\/t\)\), \(-1\), "0", "0", "0", "0"},
            {"0", "1", \(1\/t\), "0", "0", "0"},
            {"0", "0", \(-\(1\/t\)\), \(-\(1\/t\)\), \(-\(1\/t\)\), "0"},
            {\(1\/t\), \(1\/t\), \(1\/t\), \(1\/t\), "0", "0"}
            },
          RowSpacings->1,
          ColumnSpacings->1,
          ColumnAlignments->{Left}], "\[NoBreak]", ")"}],
      Function[ BoxForm`e$, 
        MatrixForm[ BoxForm`e$]]]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Det[t^MM]\)], "Input"],

Cell[BoxData[
    \(8 + 1\/t\^6 - 8\/t\^5 + 26\/t\^4 - 45\/t\^3 + 45\/t\^2 - 26\/t - 
      t\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Factor[%]\)], "Input"],

Cell[BoxData[
    \(\(-\(\(\((\(-1\) + t)\)\^5\ \((1 - 3\ t + 
                t\^2)\)\)\/t\^6\)\)\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Det[NM]\  // \ Factor\)], "Input"],

Cell[BoxData[
    \(\(-\(\(1 - 3\ t + t\^2\)\/t\^6\)\)\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(Permanent[m_List] := 
      Expand[With[{v = Array[x, Length[m]]}, 
          Coefficient[Times @@ \((m . v)\), Times @@ v]]]\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Permanent[\(NeuwirthMatrix[PlanarGridDiagram[Knot[10, 10]]]\)[
        t]]\)], "Input"],

Cell[BoxData[
    \(\(-\(16\/t\^18\)\) - 59\/t\^17 - 85\/t\^16 - 57\/t\^15 - 25\/t\^14 - 
      5\/t\^13\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(pgd\  = \ PlanarGridDiagram[Knot[3, 1]]\)], "Input"],

Cell[BoxData[
    \(PlanarGridDiagram[{5, 2}, {1, 3}, {2, 4}, {3, 5}, {4, 1}]\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(MM\  = \ MinesweeperMatrix[pgd]\)], "Input"],

Cell[BoxData[
    \({{0, \(-1\), \(-1\), \(-1\), 0}, {1, 0, \(-1\), \(-1\), 0}, {1, 1, 
        0, \(-1\), 0}, {1, 1, 1, 0, 0}, {0, 0, 0, 0, 0}}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(a[2, 3]\)], "Input"],

Cell[BoxData[
    \(1\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(AlexanderDegreeShift\)], "Input"],

Cell[BoxData[
    \(\(-2\)\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(AlexanderDegree[State\  @@ \ #] &\)\  /@ \ 
      Permutations[Range[n]]\)], "Input"],

Cell[BoxData[
    \({\(-2\), \(-2\), \(-2\), \(-1\), \(-3\), \(-2\), \(-2\), \(-2\), \
\(-1\), 0, \(-2\), \(-1\), \(-3\), \(-2\), \(-2\), \(-1\), \(-2\), \(-2\), \
\(-4\), \(-3\), \(-3\), \(-2\), \(-2\), \(-2\), \(-2\), \(-2\), \(-2\), \
\(-1\), \(-3\), \(-2\), \(-1\), \(-1\), 0, 1, \(-1\), 
      0, \(-2\), \(-1\), \(-1\), 
      0, \(-1\), \(-1\), \(-3\), \(-2\), \(-2\), \(-1\), \(-1\), \(-1\), \(-3\
\), \(-3\), \(-2\), \(-1\), \(-3\), \(-2\), \(-2\), \(-2\), \(-1\), 
      0, \(-2\), \(-1\), \(-2\), \(-1\), \(-2\), \(-1\), \(-1\), \(-1\), \(-3\
\), \(-2\), \(-3\), \(-2\), \(-1\), \(-1\), \(-4\), \(-3\), \(-3\), \(-2\), \
\(-3\), \(-3\), \(-3\), \(-2\), \(-2\), \(-1\), \(-2\), \(-2\), \(-2\), \
\(-1\), \(-2\), \(-1\), \(-1\), \(-1\), \(-3\), \(-3\), \(-3\), \(-3\), \
\(-2\), \(-2\), \(-5\), \(-4\), \(-4\), \(-3\), \(-3\), \(-3\), \(-4\), \
\(-3\), \(-3\), \(-2\), \(-2\), \(-2\), \(-3\), \(-2\), \(-3\), \(-2\), \
\(-1\), \(-1\), \(-3\), \(-3\), \(-3\), \(-3\), \(-2\), \(-2\)}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \({Max\  @@ \ %, \ Min\  @@ \ %}\)], "Input"],

Cell[BoxData[
    \({1, \(-5\)}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(x0\)], "Input"],

Cell[BoxData[
    \(State[5, 1, 2, 3, 4]\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(?MaslovDegree\)\)], "Input"],

Cell["Global`MaslovDegree", "Print",
  CellTags->"Info3363345842-8372562"],

Cell[BoxData[
    InterpretationBox[GridBox[{
          {GridBox[{
                {\(MaslovDegree[State[5, 1, 2, 3, 4]] = \(-4\)\)},
                {" "},
                {\(MaslovDegree[x_State] := \(MaslovDegree[x] = 
                      Module[{i1, i2, j1, j2, y, r}, i1 = 1; 
                        While[x\[LeftDoubleBracket]
                              i1\[RightDoubleBracket] \[NotEqual] 
                            x0\[LeftDoubleBracket]
                              i1\[RightDoubleBracket], \(++i1\)]; 
                        j1 = x\[LeftDoubleBracket]i1\[RightDoubleBracket]; 
                        j2 = x0\[LeftDoubleBracket]
                            i1\[RightDoubleBracket]; {{i2}} = 
                          Position[x, j2]; Print[r = {{i1, j1}, {i2, j2}}]; 
                        y = x; 
                        y\[LeftDoubleBracket]i1\[RightDoubleBracket] = j2; 
                        y\[LeftDoubleBracket]i2\[RightDoubleBracket] = j1; 
                        MaslovDegree[y] + P[x, r] + P[y, r] - 2\ W[r]]\)\)}
                },
              GridBaseline->{Baseline, {1, 1}},
              ColumnWidths->0.999,
              ColumnAlignments->{Left}]}
          },
        GridBaseline->{Baseline, {1, 1}},
        ColumnAlignments->{Left}],
      Definition[ "MaslovDegree"],
      Editable->False]], "Print",
  CellTags->"Info3363345842-8372562"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(MaslovDegree[State[5, 1, 4, 3, 2]]\)], "Input"],

Cell[BoxData[
    \({{3, 4}, {5, 2}}\)], "Print"],

Cell[BoxData[
    \(\(-4\) + PP[State[5, 1, 2, 3, 4], {{3, 4}, {5, 2}}] + 
      PP[State[5, 1, 4, 3, 2], {{3, 4}, {5, 2}}] - 
      2\ WW[{{3, 4}, {5, 2}}]\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(MaslovDegree[State\  @@ \ #] &\)\  /@ \ 
      Permutations[Range[n]]\)], "Input"],

Cell[BoxData[
    \({0, \(-1\), \(-1\), 0, \(-2\), \(-1\), \(-1\), \(-2\), 0, 1, \(-1\), 
      0, \(-2\), \(-1\), \(-1\), 0, 
      0, \(-1\), \(-3\), \(-2\), \(-2\), \(-1\), \(-1\), \(-2\), \(-1\), \(-2\
\), \(-2\), \(-1\), \(-3\), \(-2\), 0, \(-1\), 1, 2, 0, 1, \(-1\), 0, 0, 1, 
      1, 0, \(-2\), \(-1\), \(-1\), 0, 0, \(-1\), \(-2\), \(-3\), \(-1\), 
      0, \(-2\), \(-1\), \(-1\), \(-2\), 0, 1, \(-1\), 0, 0, 1, \(-1\), 0, 2, 
      1, \(-1\), 0, \(-2\), \(-1\), 1, 
      0, \(-3\), \(-2\), \(-2\), \(-1\), \(-1\), \(-2\), \(-2\), \(-1\), \(-1\
\), 0, 0, \(-1\), \(-1\), 0, \(-2\), \(-1\), 1, 0, 0, \(-1\), \(-1\), \(-2\), 
      0, \(-1\), \(-4\), \(-3\), \(-3\), \(-2\), \(-2\), \(-3\), \(-3\), \(-2\
\), \(-2\), \(-1\), \(-1\), \(-2\), \(-2\), \(-1\), \(-3\), \(-2\), 
      0, \(-1\), \(-1\), \(-2\), \(-2\), \(-3\), \(-1\), \(-2\)}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Timing[\[IndentingNewLine]Expand[
        Factor[Total[\[IndentingNewLine]\(\((\((\(-1\))\)^
                        MaslovDegree[State\  @@ \ #]*
                      t^AlexanderDegree[State\  @@ \ #])\) &\)\  /@ \ 
                Permutations[Range[n]]\[IndentingNewLine]]\ /\ \ \((1 - 
                  1/t)\)^\((n - 1)\)]]\[IndentingNewLine]]\)], "Input"],

Cell[BoxData[
    \({13.922000000000011`\ Second, 
      9 + 1\/t\^2 - 5\/t - 5\ t + t\^2}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(?Sum\)\)], "Input"],

Cell[BoxData[
    RowBox[{"\<\"Sum[f, {i, imax}] evaluates the sum of the expressions f as \
evaluated for each i from 1 to imax. Sum[f, {i, imin, imax}] starts with i = \
imin. Sum[f, {i, imin, imax, di}] uses steps di. Sum[f, {i, imin, imax}, {j, \
jmin, jmax}, ... ] evaluates a sum over multiple indices.\"\>", " ", 
      ButtonBox[
        StyleBox["More\[Ellipsis]",
          "SR"],
        ButtonData:>"Sum",
        Active->True,
        ButtonStyle->"RefGuideLink"]}]], "Print",
  CellTags->"Info3363420824-5115054"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(?Equal\)\)], "Input"],

Cell[BoxData[
    RowBox[{"\<\"lhs == rhs returns True if lhs and rhs are identical.\"\>", 
      " ", 
      ButtonBox[
        StyleBox["More\[Ellipsis]",
          "SR"],
        ButtonData:>"Equal",
        Active->True,
        ButtonStyle->"RefGuideLink"]}]], "Print",
  CellTags->"Info3363421844-9025715"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Signature[{1, 2, 2}]\)], "Input"],

Cell[BoxData[
    \(0\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(?For\)\)], "Input"],

Cell[BoxData[
    RowBox[{"\<\"For[start, test, incr, body] executes start, then repeatedly \
evaluates body and incr until test fails to give True.\"\>", " ", 
      ButtonBox[
        StyleBox["More\[Ellipsis]",
          "SR"],
        ButtonData:>"For",
        Active->True,
        ButtonStyle->"RefGuideLink"]}]], "Print",
  CellTags->"Info3363422109-7242685"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(FullForm[%]\)], "Input"],

Cell[BoxData[
    TagBox[
      StyleBox[\(List[Null]\),
        ShowSpecialCharacters->False,
        ShowStringCharacters->True,
        NumberMarks->True],
      FullForm]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\((\(\((#\  \[Rule] \ Boundary[#])\) &\)\  /@ \ AllStates)\)\  /. \ 
      x_State\  \[Rule] \ x*A^AlexanderDegree[x]*M^MaslovDegree[x]\)], "Input"],

Cell[BoxData[
    \({State[1, 2, 3, 4, 5]\/A\^2 \[Rule] 
        State[1, 2, 3, 5, 4]\/\(A\^2\ M\) + 
          State[1, 2, 4, 3, 5]\/\(A\^2\ M\) + 
          State[1, 3, 2, 4, 5]\/\(A\^2\ M\) + 
          State[2, 1, 3, 4, 5]\/\(A\^2\ M\) + 
          State[5, 2, 3, 4, 1]\/\(A\^2\ M\), 
      State[1, 2, 3, 5, 4]\/\(A\^2\ M\) \[Rule] 
        State[1, 3, 2, 5, 4]\/\(A\^2\ M\^2\) + 
          State[2, 1, 3, 5, 4]\/\(A\^2\ M\^2\), 
      State[1, 2, 4, 3, 5]\/\(A\^2\ M\) \[Rule] 
        State[2, 1, 4, 3, 5]\/\(A\^2\ M\^2\) + 
          State[5, 2, 4, 3, 1]\/\(A\^2\ M\^2\), 
      State[1, 2, 4, 5, 3]\/A \[Rule] State[2, 1, 4, 5, 3]\/\(A\ M\), 
      State[1, 2, 5, 3, 4]\/\(A\^3\ M\^2\) \[Rule] 
        State[2, 1, 5, 3, 4]\/\(A\^3\ M\^3\), 
      State[1, 2, 5, 4, 3]\/\(A\^2\ M\) \[Rule] 
        State[2, 1, 5, 4, 3]\/\(A\^2\ M\^2\), 
      State[1, 3, 2, 4, 5]\/\(A\^2\ M\) \[Rule] 
        State[1, 3, 2, 5, 4]\/\(A\^2\ M\^2\) + 
          State[5, 3, 2, 4, 1]\/\(A\^2\ M\^2\), 
      State[1, 3, 2, 5, 4]\/\(A\^2\ M\^2\) \[Rule] 0, 
      State[1, 3, 4, 2, 5]\/A \[Rule] State[5, 3, 4, 2, 1]\/\(A\ M\), 
      M\ State[1, 3, 4, 5, 2] \[Rule] 0, 
      State[1, 3, 5, 2, 4]\/\(A\^2\ M\) \[Rule] 
        State[1, 3, 2, 5, 4]\/\(A\^2\ M\^2\), 
      State[1, 3, 5, 4, 2]\/A \[Rule] 0, 
      State[1, 4, 2, 3, 5]\/\(A\^3\ M\^2\) \[Rule] 
        State[5, 4, 2, 3, 1]\/\(A\^3\ M\^3\), 
      State[1, 4, 2, 5, 3]\/\(A\^2\ M\) \[Rule] 
        State[1, 3, 2, 5, 4]\/\(A\^2\ M\^2\), 
      State[1, 4, 3, 2, 5]\/\(A\^2\ M\) \[Rule] 
        State[5, 4, 3, 2, 1]\/\(A\^2\ M\^2\), 
      State[1, 4, 3, 5, 2]\/A \[Rule] 0, 
      State[1, 4, 5, 2, 3]\/A\^2 \[Rule] 
        State[1, 3, 5, 2, 4]\/\(A\^2\ M\) + 
          State[1, 4, 2, 5, 3]\/\(A\^2\ M\) + 
          State[1, 4, 5, 3, 2]\/\(A\^2\ M\) + 
          State[1, 5, 4, 2, 3]\/\(A\^2\ M\), 
      State[1, 4, 5, 3, 2]\/\(A\^2\ M\) \[Rule] 
        State[1, 5, 4, 3, 2]\/\(A\^2\ M\^2\), 
      State[1, 5, 2, 3, 4]\/\(A\^4\ M\^3\) \[Rule] 0, 
      State[1, 5, 2, 4, 3]\/\(A\^3\ M\^2\) \[Rule] 0, 
      State[1, 5, 3, 2, 4]\/\(A\^3\ M\^2\) \[Rule] 0, 
      State[1, 5, 3, 4, 2]\/\(A\^2\ M\) \[Rule] 
        State[1, 5, 4, 3, 2]\/\(A\^2\ M\^2\), 
      State[1, 5, 4, 2, 3]\/\(A\^2\ M\) \[Rule] 
        State[1, 5, 4, 3, 2]\/\(A\^2\ M\^2\), 
      State[1, 5, 4, 3, 2]\/\(A\^2\ M\^2\) \[Rule] 0, 
      State[2, 1, 3, 4, 5]\/\(A\^2\ M\) \[Rule] 
        State[2, 1, 3, 5, 4]\/\(A\^2\ M\^2\) + 
          State[2, 1, 4, 3, 5]\/\(A\^2\ M\^2\), 
      State[2, 1, 3, 5, 4]\/\(A\^2\ M\^2\) \[Rule] 0, 
      State[2, 1, 4, 3, 5]\/\(A\^2\ M\^2\) \[Rule] 0, 
      State[2, 1, 4, 5, 3]\/\(A\ M\) \[Rule] 0, 
      State[2, 1, 5, 3, 4]\/\(A\^3\ M\^3\) \[Rule] 0, 
      State[2, 1, 5, 4, 3]\/\(A\^2\ M\^2\) \[Rule] 0, 
      State[2, 3, 1, 4, 5]\/A \[Rule] State[2, 3, 1, 5, 4]\/\(A\ M\), 
      State[2, 3, 1, 5, 4]\/\(A\ M\) \[Rule] 0, 
      M\ State[2, 3, 4, 1, 5] \[Rule] 0, 
      A\ M\^2\ State[2, 3, 4, 5, 1] \[Rule] 0, 
      State[2, 3, 5, 1, 4]\/A \[Rule] State[2, 3, 1, 5, 4]\/\(A\ M\), 
      M\ State[2, 3, 5, 4, 1] \[Rule] 0, 
      State[2, 4, 1, 3, 5]\/\(A\^2\ M\) \[Rule] 
        State[2, 1, 4, 3, 5]\/\(A\^2\ M\^2\), 
      State[2, 4, 1, 5, 3]\/A \[Rule] 
        State[2, 1, 4, 5, 3]\/\(A\ M\) + State[2, 3, 1, 5, 4]\/\(A\ M\), 
      State[2, 4, 3, 1, 5]\/A \[Rule] 0, 
      M\ State[2, 4, 3, 5, 1] \[Rule] 
        0, \(M\ State[2, 4, 5, 1, 3]\)\/A \[Rule] 
        State[2, 3, 5, 1, 4]\/A + State[2, 4, 1, 5, 3]\/A + 
          State[2, 4, 5, 3, 1]\/A + State[2, 5, 4, 1, 3]\/A, 
      State[2, 4, 5, 3, 1]\/A \[Rule] State[2, 5, 4, 3, 1]\/\(A\ M\), 
      State[2, 5, 1, 3, 4]\/\(A\^3\ M\^2\) \[Rule] 
        State[2, 1, 5, 3, 4]\/\(A\^3\ M\^3\), 
      State[2, 5, 1, 4, 3]\/\(A\^2\ M\) \[Rule] 
        State[2, 1, 5, 4, 3]\/\(A\^2\ M\^2\), 
      State[2, 5, 3, 1, 4]\/\(A\^2\ M\) \[Rule] 
        State[2, 1, 3, 5, 4]\/\(A\^2\ M\^2\), 
      State[2, 5, 3, 4, 1]\/A \[Rule] State[2, 5, 4, 3, 1]\/\(A\ M\), 
      State[2, 5, 4, 1, 3]\/A \[Rule] 
        State[2, 1, 4, 5, 3]\/\(A\ M\) + State[2, 5, 4, 3, 1]\/\(A\ M\), 
      State[2, 5, 4, 3, 1]\/\(A\ M\) \[Rule] 0, 
      State[3, 1, 2, 4, 5]\/\(A\^3\ M\^2\) \[Rule] 
        State[3, 1, 2, 5, 4]\/\(A\^3\ M\^3\), 
      State[3, 1, 2, 5, 4]\/\(A\^3\ M\^3\) \[Rule] 0, 
      State[3, 1, 4, 2, 5]\/\(A\^2\ M\) \[Rule] 
        State[2, 1, 4, 3, 5]\/\(A\^2\ M\^2\), 
      State[3, 1, 4, 5, 2]\/A \[Rule] State[2, 1, 4, 5, 3]\/\(A\ M\), 
      State[3, 1, 5, 2, 4]\/\(A\^3\ M\^2\) \[Rule] 
        State[2, 1, 5, 3, 4]\/\(A\^3\ M\^3\) + 
          State[3, 1, 2, 5, 4]\/\(A\^3\ M\^3\), 
      State[3, 1, 5, 4, 2]\/\(A\^2\ M\) \[Rule] 
        State[2, 1, 5, 4, 3]\/\(A\^2\ M\^2\), 
      State[3, 2, 1, 4, 5]\/\(A\^2\ M\) \[Rule] 
        State[3, 2, 1, 5, 4]\/\(A\^2\ M\^2\), 
      State[3, 2, 1, 5, 4]\/\(A\^2\ M\^2\) \[Rule] 0, 
      State[3, 2, 4, 1, 5]\/A \[Rule] 0, M\ State[3, 2, 4, 5, 1] \[Rule] 0, 
      State[3, 2, 5, 1, 4]\/\(A\^2\ M\) \[Rule] 
        State[3, 2, 1, 5, 4]\/\(A\^2\ M\^2\), 
      State[3, 2, 5, 4, 1]\/A \[Rule] 0, 
      State[3, 4, 1, 2, 5]\/A\^2 \[Rule] 
        State[2, 4, 1, 3, 5]\/\(A\^2\ M\) + 
          State[3, 1, 4, 2, 5]\/\(A\^2\ M\) + 
          State[3, 4, 2, 1, 5]\/\(A\^2\ M\) + 
          State[4, 3, 1, 2, 5]\/\(A\^2\ M\), \(M\ State[3, 4, 1, 5, 2]\)\/A \
\[Rule] State[2, 4, 1, 5, 3]\/A + State[3, 1, 4, 5, 2]\/A + 
          State[3, 4, 2, 5, 1]\/A + State[4, 3, 1, 5, 2]\/A, 
      State[3, 4, 2, 1, 5]\/\(A\^2\ M\) \[Rule] 
        State[4, 3, 2, 1, 5]\/\(A\^2\ M\^2\), 
      State[3, 4, 2, 5, 1]\/A \[Rule] 
        State[4, 3, 2, 5, 1]\/\(A\ M\), \(M\^2\ State[3, 4, 5, 1, 2]\)\/A \
\[Rule] \(M\ State[2, 4, 5, 1, 3]\)\/A + \(M\ State[3, 4, 1, 5, 2]\)\/A + \(M\
\ State[3, 4, 5, 2, 1]\)\/A + \(M\ State[3, 5, 4, 1, 2]\)\/A + \(M\ State[4, \
3, 5, 1, 2]\)\/A, \(M\ State[3, 4, 5, 2, 1]\)\/A \[Rule] 
        State[2, 4, 5, 3, 1]\/A + State[3, 4, 2, 5, 1]\/A + 
          State[3, 5, 4, 2, 1]\/A + State[4, 3, 5, 2, 1]\/A, 
      State[3, 5, 1, 2, 4]\/\(A\^3\ M\) \[Rule] 
        State[2, 5, 1, 3, 4]\/\(A\^3\ M\^2\) + 
          State[3, 1, 5, 2, 4]\/\(A\^3\ M\^2\) + 
          State[3, 5, 2, 1, 4]\/\(A\^3\ M\^2\) + 
          State[5, 3, 1, 2, 4]\/\(A\^3\ M\^2\), 
      State[3, 5, 1, 4, 2]\/A\^2 \[Rule] 
        State[2, 5, 1, 4, 3]\/\(A\^2\ M\) + 
          State[3, 1, 5, 4, 2]\/\(A\^2\ M\) + 
          State[3, 5, 2, 4, 1]\/\(A\^2\ M\) + 
          State[5, 3, 1, 4, 2]\/\(A\^2\ M\), 
      State[3, 5, 2, 1, 4]\/\(A\^3\ M\^2\) \[Rule] 
        State[3, 1, 2, 5, 4]\/\(A\^3\ M\^3\) + 
          State[5, 3, 2, 1, 4]\/\(A\^3\ M\^3\), 
      State[3, 5, 2, 4, 1]\/\(A\^2\ M\) \[Rule] 
        State[5, 3, 2, 4, 1]\/\(A\^2\ M\^2\), \(M\ State[3, 5, 4, 1, 2]\)\/A \
\[Rule] State[2, 5, 4, 1, 3]\/A + State[3, 1, 4, 5, 2]\/A + 
          State[3, 5, 4, 2, 1]\/A + State[5, 3, 4, 1, 2]\/A, 
      State[3, 5, 4, 2, 1]\/A \[Rule] 
        State[2, 5, 4, 3, 1]\/\(A\ M\) + State[5, 3, 4, 2, 1]\/\(A\ M\), 
      State[4, 1, 2, 3, 5]\/\(A\^4\ M\^3\) \[Rule] 0, 
      State[4, 1, 2, 5, 3]\/\(A\^3\ M\^2\) \[Rule] 
        State[3, 1, 2, 5, 4]\/\(A\^3\ M\^3\), 
      State[4, 1, 3, 2, 5]\/\(A\^3\ M\^2\) \[Rule] 0, 
      State[4, 1, 3, 5, 2]\/\(A\^2\ M\) \[Rule] 
        State[2, 1, 3, 5, 4]\/\(A\^2\ M\^2\), 
      State[4, 1, 5, 2, 3]\/\(A\^3\ M\) \[Rule] 
        State[3, 1, 5, 2, 4]\/\(A\^3\ M\^2\) + 
          State[4, 1, 2, 5, 3]\/\(A\^3\ M\^2\) + 
          State[4, 1, 5, 3, 2]\/\(A\^3\ M\^2\) + 
          State[5, 1, 4, 2, 3]\/\(A\^3\ M\^2\), 
      State[4, 1, 5, 3, 2]\/\(A\^3\ M\^2\) \[Rule] 
        State[2, 1, 5, 3, 4]\/\(A\^3\ M\^3\) + 
          State[5, 1, 4, 3, 2]\/\(A\^3\ M\^3\), 
      State[4, 2, 1, 3, 5]\/\(A\^3\ M\^2\) \[Rule] 0, 
      State[4, 2, 1, 5, 3]\/\(A\^2\ M\) \[Rule] 
        State[3, 2, 1, 5, 4]\/\(A\^2\ M\^2\), 
      State[4, 2, 3, 1, 5]\/\(A\^2\ M\) \[Rule] 
        State[4, 3, 2, 1, 5]\/\(A\^2\ M\^2\), 
      State[4, 2, 3, 5, 1]\/A \[Rule] State[4, 3, 2, 5, 1]\/\(A\ M\), 
      State[4, 2, 5, 1, 3]\/A\^2 \[Rule] 
        State[3, 2, 5, 1, 4]\/\(A\^2\ M\) + 
          State[4, 2, 1, 5, 3]\/\(A\^2\ M\) + 
          State[4, 2, 5, 3, 1]\/\(A\^2\ M\) + 
          State[5, 2, 4, 1, 3]\/\(A\^2\ M\), 
      State[4, 2, 5, 3, 1]\/\(A\^2\ M\) \[Rule] 
        State[5, 2, 4, 3, 1]\/\(A\^2\ M\^2\), 
      State[4, 3, 1, 2, 5]\/\(A\^2\ M\) \[Rule] 
        State[4, 3, 2, 1, 5]\/\(A\^2\ M\^2\), 
      State[4, 3, 1, 5, 2]\/A \[Rule] 
        State[2, 3, 1, 5, 4]\/\(A\ M\) + State[4, 3, 2, 5, 1]\/\(A\ M\), 
      State[4, 3, 2, 1, 5]\/\(A\^2\ M\^2\) \[Rule] 0, 
      State[4, 3, 2, 5, 1]\/\(A\ M\) \[Rule] 
        0, \(M\ State[4, 3, 5, 1, 2]\)\/A \[Rule] 
        State[2, 3, 5, 1, 4]\/A + State[4, 3, 1, 5, 2]\/A + 
          State[4, 3, 5, 2, 1]\/A + State[5, 3, 4, 1, 2]\/A, 
      State[4, 3, 5, 2, 1]\/A \[Rule] 
        State[4, 3, 2, 5, 1]\/\(A\ M\) + State[5, 3, 4, 2, 1]\/\(A\ M\), 
      State[4, 5, 1, 2, 3]\/A\^3 \[Rule] 
        State[3, 5, 1, 2, 4]\/\(A\^3\ M\) + 
          State[4, 1, 5, 2, 3]\/\(A\^3\ M\) + 
          State[4, 5, 1, 3, 2]\/\(A\^3\ M\) + 
          State[4, 5, 2, 1, 3]\/\(A\^3\ M\) + 
          State[5, 4, 1, 2, 3]\/\(A\^3\ M\), 
      State[4, 5, 1, 3, 2]\/\(A\^3\ M\) \[Rule] 
        State[2, 5, 1, 3, 4]\/\(A\^3\ M\^2\) + 
          State[4, 1, 5, 3, 2]\/\(A\^3\ M\^2\) + 
          State[4, 5, 2, 3, 1]\/\(A\^3\ M\^2\) + 
          State[5, 4, 1, 3, 2]\/\(A\^3\ M\^2\), 
      State[4, 5, 2, 1, 3]\/\(A\^3\ M\) \[Rule] 
        State[3, 5, 2, 1, 4]\/\(A\^3\ M\^2\) + 
          State[4, 1, 2, 5, 3]\/\(A\^3\ M\^2\) + 
          State[4, 5, 2, 3, 1]\/\(A\^3\ M\^2\) + 
          State[5, 4, 2, 1, 3]\/\(A\^3\ M\^2\), 
      State[4, 5, 2, 3, 1]\/\(A\^3\ M\^2\) \[Rule] 
        State[5, 4, 2, 3, 1]\/\(A\^3\ M\^3\), 
      State[4, 5, 3, 1, 2]\/A\^2 \[Rule] 
        State[2, 5, 3, 1, 4]\/\(A\^2\ M\) + 
          State[4, 1, 3, 5, 2]\/\(A\^2\ M\) + 
          State[4, 5, 3, 2, 1]\/\(A\^2\ M\) + 
          State[5, 4, 3, 1, 2]\/\(A\^2\ M\), 
      State[4, 5, 3, 2, 1]\/\(A\^2\ M\) \[Rule] 
        State[5, 4, 3, 2, 1]\/\(A\^2\ M\^2\), 
      State[5, 1, 2, 3, 4]\/\(A\^5\ M\^4\) \[Rule] 0, 
      State[5, 1, 2, 4, 3]\/\(A\^4\ M\^3\) \[Rule] 0, 
      State[5, 1, 3, 2, 4]\/\(A\^4\ M\^3\) \[Rule] 0, 
      State[5, 1, 3, 4, 2]\/\(A\^3\ M\^2\) \[Rule] 
        State[5, 1, 4, 3, 2]\/\(A\^3\ M\^3\), 
      State[5, 1, 4, 2, 3]\/\(A\^3\ M\^2\) \[Rule] 
        State[5, 1, 4, 3, 2]\/\(A\^3\ M\^3\), 
      State[5, 1, 4, 3, 2]\/\(A\^3\ M\^3\) \[Rule] 0, 
      State[5, 2, 1, 3, 4]\/\(A\^4\ M\^3\) \[Rule] 0, 
      State[5, 2, 1, 4, 3]\/\(A\^3\ M\^2\) \[Rule] 0, 
      State[5, 2, 3, 1, 4]\/\(A\^3\ M\^2\) \[Rule] 
        State[5, 3, 2, 1, 4]\/\(A\^3\ M\^3\), 
      State[5, 2, 3, 4, 1]\/\(A\^2\ M\) \[Rule] 
        State[5, 2, 4, 3, 1]\/\(A\^2\ M\^2\) + 
          State[5, 3, 2, 4, 1]\/\(A\^2\ M\^2\), 
      State[5, 2, 4, 1, 3]\/\(A\^2\ M\) \[Rule] 
        State[5, 2, 4, 3, 1]\/\(A\^2\ M\^2\), 
      State[5, 2, 4, 3, 1]\/\(A\^2\ M\^2\) \[Rule] 0, 
      State[5, 3, 1, 2, 4]\/\(A\^3\ M\^2\) \[Rule] 
        State[5, 3, 2, 1, 4]\/\(A\^3\ M\^3\), 
      State[5, 3, 1, 4, 2]\/\(A\^2\ M\) \[Rule] 
        State[5, 3, 2, 4, 1]\/\(A\^2\ M\^2\), 
      State[5, 3, 2, 1, 4]\/\(A\^3\ M\^3\) \[Rule] 0, 
      State[5, 3, 2, 4, 1]\/\(A\^2\ M\^2\) \[Rule] 0, 
      State[5, 3, 4, 1, 2]\/A \[Rule] State[5, 3, 4, 2, 1]\/\(A\ M\), 
      State[5, 3, 4, 2, 1]\/\(A\ M\) \[Rule] 0, 
      State[5, 4, 1, 2, 3]\/\(A\^3\ M\) \[Rule] 
        State[5, 1, 4, 2, 3]\/\(A\^3\ M\^2\) + 
          State[5, 3, 1, 2, 4]\/\(A\^3\ M\^2\) + 
          State[5, 4, 1, 3, 2]\/\(A\^3\ M\^2\) + 
          State[5, 4, 2, 1, 3]\/\(A\^3\ M\^2\), 
      State[5, 4, 1, 3, 2]\/\(A\^3\ M\^2\) \[Rule] 
        State[5, 1, 4, 3, 2]\/\(A\^3\ M\^3\) + 
          State[5, 4, 2, 3, 1]\/\(A\^3\ M\^3\), 
      State[5, 4, 2, 1, 3]\/\(A\^3\ M\^2\) \[Rule] 
        State[5, 3, 2, 1, 4]\/\(A\^3\ M\^3\) + 
          State[5, 4, 2, 3, 1]\/\(A\^3\ M\^3\), 
      State[5, 4, 2, 3, 1]\/\(A\^3\ M\^3\) \[Rule] 0, 
      State[5, 4, 3, 1, 2]\/\(A\^2\ M\) \[Rule] 
        State[5, 4, 3, 2, 1]\/\(A\^2\ M\^2\), 
      State[5, 4, 3, 2, 1]\/\(A\^2\ M\^2\) \[Rule] 0}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Boundary[Boundary[AllStates[]]]\  /. \ 
      2  x_State\  \[Rule] \ 0\)], "Input"],

Cell[BoxData[
    \({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
      0}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(AllStates[\(-1\), \(-1\)]\)], "Input"],

Cell[BoxData[
    \({State[2, 1, 4, 5, 3], State[2, 3, 1, 5, 4], State[2, 5, 4, 3, 1], 
      State[4, 3, 2, 5, 1], State[5, 3, 4, 2, 1]}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(AllStates[0, \(-1\)]\)], "Input"],

Cell[BoxData[
    \({State[1, 2, 4, 5, 3], State[1, 3, 4, 2, 5], State[1, 3, 5, 4, 2], 
      State[1, 4, 3, 5, 2], State[2, 3, 1, 4, 5], State[2, 3, 5, 1, 4], 
      State[2, 4, 1, 5, 3], State[2, 4, 3, 1, 5], State[2, 4, 5, 3, 1], 
      State[2, 5, 3, 4, 1], State[2, 5, 4, 1, 3], State[3, 1, 4, 5, 2], 
      State[3, 2, 4, 1, 5], State[3, 2, 5, 4, 1], State[3, 4, 2, 5, 1], 
      State[3, 5, 4, 2, 1], State[4, 2, 3, 5, 1], State[4, 3, 1, 5, 2], 
      State[4, 3, 5, 2, 1], State[5, 3, 4, 1, 2]}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(BoundaryMatrix[0, \ \(-1\)]\  // \ MatrixForm\)], "Input"],

Cell[BoxData[
    TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
            {"1", "0", "0", "0", "0", "0", "1", "0", "0", "0", "1", "1", "0", 
              "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", 
              "0", "0", "0", "0", "1", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "0", "0", 
              "0", "0", "1", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
              "0", "1", "0", "1", "1", "1", "0"},
            {"0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
              "0", "0", "1", "0", "0", "1", "1"}
            },
          RowSpacings->1,
          ColumnSpacings->1,
          ColumnAlignments->{Left}], "\[NoBreak]", ")"}],
      Function[ BoxForm`e$, 
        MatrixForm[ BoxForm`e$]]]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Rank[0, \(-1\)]\)], "Input"],

Cell[BoxData[
    \(5\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(MOSHomology[]\  // \ MatrixForm\)], "Input"],

Cell[BoxData[
    TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
            {"1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
              "0"},
            {"0", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
              "0"},
            {"0", "0", "21", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
              "0"},
            {"0", "0", "0", "35", "0", "0", "0", "0", "0", "0", "0", "0", 
              "0"},
            {"0", "0", "0", "1", "35", "0", "0", "0", "0", "0", "0", "0", 
              "0"},
            {"0", "0", "0", "0", "6", "22", "0", "0", "0", "0", "0", "0", 
              "0"},
            {"0", "0", "0", "0", "0", "15", "14", "0", "0", "0", "0", "0", 
              "0"},
            {"0", "0", "0", "0", "0", "0", "20", "22", "0", "0", "0", "0", 
              "0"},
            {"0", "0", "0", "0", "0", "0", "0", "15", "35", "0", "0", "0", 
              "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "6", "35", "0", "0", 
              "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "21", "0", 
              "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "7", 
              "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1"}
            },
          RowSpacings->1,
          ColumnSpacings->1,
          ColumnAlignments->{Left}], "\[NoBreak]", ")"}],
      Function[ BoxForm`e$, 
        MatrixForm[ BoxForm`e$]]]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Factor[
      1 - 5  t + 11  t^2 - 14  t^3 + 11  t^4 - 5  t^5 + t^6]\)], "Input"],

Cell[BoxData[
    \(\((\(-1\) + t)\)\^4\ \((1 - t + t\^2)\)\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(?Inner\)\)], "Input"],

Cell[BoxData[
    RowBox[{"\<\"Inner[f, list1, list2, g] is a generalization of Dot in \
which f plays the role of multiplication and g of addition.\"\>", " ", 
      ButtonBox[
        StyleBox["More\[Ellipsis]",
          "SR"],
        ButtonData:>"Inner",
        Active->True,
        ButtonStyle->"RefGuideLink"]}]], "Print",
  CellTags->"Info3363434182-8930660"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(MOSHomology[]\)], "Input"],

Cell[BoxData[
    \({{1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 7, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0}, {0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 35, 
        0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 1, 35, 0, 0, 0, 0, 0, 0, 0, 
        0}, {0, 0, 0, 0, 6, 22, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 15, 14, 
        0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 20, 22, 0, 0, 0, 0, 0}, {0, 0, 
        0, 0, 0, 0, 0, 15, 35, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 6, 35, 
        0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 21, 0, 0}, {0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 7, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
        1}}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Total[
      Flatten[{{1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 7, 0, 0, 0, 0, 0, 
            0, 0, 0, 0, 0, 0}, {0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 
            0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 1, 35, 0, 0, 0, 
            0, 0, 0, 0, 0}, {0, 0, 0, 0, 6, 22, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 
            0, 0, 0, 15, 14, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 20, 22, 0, 
            0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 15, 35, 0, 0, 0, 0}, {0, 0, 0, 
            0, 0, 0, 0, 0, 6, 35, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 
            21, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0}, {0, 0, 0, 0, 
            0, 0, 0, 0, 0, 0, 0, 0, 1}}]]\)], "Input"],

Cell[BoxData[
    \(320\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(n\)], "Input"],

Cell[BoxData[
    \(7\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(MOSPoincare[]\)], "Input"],

Cell[BoxData[
    \(1\/m\^2 + 1\/\(m\^6\ t\^3\) + 1\/\(m\^5\ t\^2\) + t\^2\/m + 
      t\^3\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(%\  // \ Simplify\)], "Input"],

Cell[BoxData[
    \(\(\((1 + m\ t)\)\^6\ \((1 + m\ t + m\^4\ t\^3 + m\^5\ t\^5 + m\^6\ \
t\^6)\)\)\/\(m\^6\ t\^3\ \((\(-1\) + m\ t)\)\^6\)\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(13!\)\)], "Input"],

Cell[BoxData[
    \(6227020800\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Length[PlanarGridDiagram[Knot[5, 1]]]\)], "Input"],

Cell[BoxData[
    \(7\)], "Output"]
}, Open  ]]
},
FrontEndVersion->"5.2 for Microsoft Windows",
ScreenRectangle->{{0, 1280}, {0, 1155}},
WindowSize->{758, 989},
WindowMargins->{{Automatic, -1593}, {Automatic, -1}},
ShowSelection->True
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{
  "Info3363345842-8372562"->{
    Cell[57834, 1286, 74, 1, 25, "Print",
      CellTags->"Info3363345842-8372562"],
    Cell[57911, 1289, 1388, 28, 118, "Print",
      CellTags->"Info3363345842-8372562"]},
  "Info3363420824-5115054"->{
    Cell[61240, 1375, 527, 11, 82, "Print",
      CellTags->"Info3363420824-5115054"]},
  "Info3363421844-9025715"->{
    Cell[61850, 1394, 312, 9, 25, "Print",
      CellTags->"Info3363421844-9025715"]},
  "Info3363422109-7242685"->{
    Cell[62371, 1420, 367, 9, 44, "Print",
      CellTags->"Info3363422109-7242685"]},
  "Info3363434182-8930660"->{
    Cell[81918, 1850, 369, 9, 44, "Print",
      CellTags->"Info3363434182-8930660"]}
  }
*)

(*CellTagsIndex
CellTagsIndex->{
  {"Info3363345842-8372562", 85266, 1960},
  {"Info3363420824-5115054", 85471, 1965},
  {"Info3363421844-9025715", 85589, 1968},
  {"Info3363422109-7242685", 85706, 1971},
  {"Info3363434182-8930660", 85823, 1974}
  }
*)

(*NotebookFileOutline
Notebook[{

Cell[CellGroupData[{
Cell[1776, 53, 62, 1, 30, "Input"],
Cell[1841, 56, 130, 2, 22, "Message"],
Cell[1974, 60, 201, 3, 37, "Message"],
Cell[2178, 65, 91, 1, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[2306, 71, 76, 1, 30, "Input"],
Cell[2385, 74, 10137, 204, 186, 1116, 88, "GraphicsData", "PostScript", \
"Graphics"],
Cell[12525, 280, 130, 3, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[12692, 288, 249, 5, 90, "Input"],
Cell[12944, 295, 138, 2, 22, "Message"],
Cell[13085, 299, 209, 3, 37, "Message"],
Cell[13297, 304, 38424, 763, 161, 4211, 336, "GraphicsData", "PostScript", \
"Graphics"],
Cell[51724, 1069, 135, 3, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[51896, 1077, 136, 2, 30, "Input"],
Cell[52035, 1081, 42, 1, 29, "Output"]
}, Open  ]],
Cell[52092, 1085, 109, 2, 30, "Input"],

Cell[CellGroupData[{
Cell[52226, 1091, 862, 16, 230, "Input"],
Cell[53091, 1109, 62, 1, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[53190, 1115, 127, 2, 30, "Input"],
Cell[53320, 1119, 495, 13, 115, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[53852, 1137, 121, 2, 30, "Input"],
Cell[53976, 1141, 655, 14, 159, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[54668, 1160, 42, 1, 30, "Input"],
Cell[54713, 1163, 107, 2, 42, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[54857, 1170, 42, 1, 30, "Input"],
Cell[54902, 1173, 112, 2, 45, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[55051, 1180, 54, 1, 30, "Input"],
Cell[55108, 1183, 68, 1, 45, "Output"]
}, Open  ]],
Cell[55191, 1187, 158, 3, 50, "Input"],

Cell[CellGroupData[{
Cell[55374, 1194, 107, 2, 30, "Input"],
Cell[55484, 1198, 118, 2, 42, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[55639, 1205, 72, 1, 30, "Input"],
Cell[55714, 1208, 91, 1, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[55842, 1214, 64, 1, 30, "Input"],
Cell[55909, 1217, 158, 2, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[56104, 1224, 40, 1, 30, "Input"],
Cell[56147, 1227, 35, 1, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[56219, 1233, 53, 1, 30, "Input"],
Cell[56275, 1236, 40, 1, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[56352, 1242, 107, 2, 30, "Input"],
Cell[56462, 1246, 1005, 14, 105, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[57504, 1265, 63, 1, 30, "Input"],
Cell[57570, 1268, 45, 1, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[57652, 1274, 35, 1, 30, "Input"],
Cell[57690, 1277, 54, 1, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[57781, 1283, 50, 1, 30, "Input"],
Cell[57834, 1286, 74, 1, 25, "Print",
  CellTags->"Info3363345842-8372562"],
Cell[57911, 1289, 1388, 28, 118, "Print",
  CellTags->"Info3363345842-8372562"]
}, Open  ]],

Cell[CellGroupData[{
Cell[59336, 1322, 67, 1, 30, "Input"],
Cell[59406, 1325, 49, 1, 25, "Print"],
Cell[59458, 1328, 170, 3, 48, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[59665, 1336, 104, 2, 30, "Input"],
Cell[59772, 1340, 861, 12, 105, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[60670, 1357, 382, 6, 110, "Input"],
Cell[61055, 1365, 104, 2, 42, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[61196, 1372, 41, 1, 30, "Input"],
Cell[61240, 1375, 527, 11, 82, "Print",
  CellTags->"Info3363420824-5115054"]
}, Open  ]],

Cell[CellGroupData[{
Cell[61804, 1391, 43, 1, 30, "Input"],
Cell[61850, 1394, 312, 9, 25, "Print",
  CellTags->"Info3363421844-9025715"]
}, Open  ]],

Cell[CellGroupData[{
Cell[62199, 1408, 53, 1, 30, "Input"],
Cell[62255, 1411, 35, 1, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[62327, 1417, 41, 1, 30, "Input"],
Cell[62371, 1420, 367, 9, 44, "Print",
  CellTags->"Info3363422109-7242685"]
}, Open  ]],

Cell[CellGroupData[{
Cell[62775, 1434, 44, 1, 30, "Input"],
Cell[62822, 1437, 186, 6, 43, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[63045, 1448, 168, 2, 30, "Input"],
Cell[63216, 1452, 12251, 239, 2768, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[75504, 1696, 103, 2, 30, "Input"],
Cell[75610, 1700, 2404, 31, 447, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[78051, 1736, 58, 1, 30, "Input"],
Cell[78112, 1739, 151, 2, 48, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[78300, 1746, 53, 1, 30, "Input"],
Cell[78356, 1749, 516, 7, 105, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[78909, 1761, 78, 1, 30, "Input"],
Cell[78990, 1764, 915, 18, 103, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[79942, 1787, 48, 1, 30, "Input"],
Cell[79993, 1790, 35, 1, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[80065, 1796, 64, 1, 30, "Input"],
Cell[80132, 1799, 1489, 33, 231, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[81658, 1837, 101, 2, 30, "Input"],
Cell[81762, 1841, 73, 1, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[81872, 1847, 43, 1, 30, "Input"],
Cell[81918, 1850, 369, 9, 44, "Print",
  CellTags->"Info3363434182-8930660"]
}, Open  ]],

Cell[CellGroupData[{
Cell[82324, 1864, 46, 1, 30, "Input"],
Cell[82373, 1867, 651, 9, 143, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[83061, 1881, 705, 10, 150, "Input"],
Cell[83769, 1893, 37, 1, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[83843, 1899, 34, 1, 30, "Input"],
Cell[83880, 1902, 35, 1, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[83952, 1908, 46, 1, 30, "Input"],
Cell[84001, 1911, 105, 2, 46, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[84143, 1918, 50, 1, 30, "Input"],
Cell[84196, 1921, 152, 2, 47, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[84385, 1928, 40, 1, 30, "Input"],
Cell[84428, 1931, 44, 1, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[84509, 1937, 70, 1, 30, "Input"],
Cell[84582, 1940, 35, 1, 29, "Output"]
}, Open  ]]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

